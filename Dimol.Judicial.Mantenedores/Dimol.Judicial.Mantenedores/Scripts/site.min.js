var totalMontoAsignado=0,totalSaldoAsignado=0,totalMontoPorAsignar=0,totalSaldoPorAsignar=0;function PaisSeleccionado(a,i){$("#"+i).empty(),$.ajax({type:"POST",url:"/Cartera/ListarRegion",dataType:"json",async:!1,data:{pais:$(a).val()},success:function(a){$.each(a,function(a,e){$("#"+i).append('<option value="'+e.Value+'">'+e.Text+"</option>")})},error:function(a){alert("Error al recuperar la regi√≥n."+a)}})}function PaisSel(){PaisSeleccionado($("#Pais"),"Region")}function RegionSeleccionada(a,i){$("#"+i).empty(),$.ajax({type:"POST",url:"/Cartera/ListarCiudad",dataType:"json",async:!1,data:{region:$(a).val()},success:function(a){$.each(a,function(a,e){$("#"+i).append('<option value="'+e.Value+'">'+e.Text+"</option>")})},error:function(a){alert("Error al recuperar la ciudad."+a)}})}function RegionSel(){$("#Ciudad").empty(),$.ajax({type:"POST",url:"/Cartera/ListarCiudad",dataType:"json",async:!1,data:{region:$("#Region").val()},success:function(a){$.each(a,function(a,e){$("#Ciudad").append('<option value="'+e.Value+'">'+e.Text+"</option>")})},error:function(a){alert("Error al recuperar la ciudad."+a)}})}function CiudadSeleccionada(a,i){$("#"+i).empty(),$.ajax({type:"POST",url:"/Cartera/ListarComuna",dataType:"json",async:!1,data:{ciudad:$(a).val()},success:function(a){$.each(a,function(a,e){$("#"+i).append('<option value="'+e.Value+'">'+e.Text+"</option>")})},error:function(a){alert("Error al recuperar la comuna."+a)}})}function CiudadSel(){$("#Comuna").empty(),$.ajax({type:"POST",url:"/Cartera/ListarComuna",dataType:"json",async:!1,data:{ciudad:$("#Ciudad").val()},success:function(a){$.each(a,function(a,e){$("#Comuna").append('<option value="'+e.Value+'">'+e.Text+"</option>")})},error:function(a){alert("Error al recuperar la comuna."+a)}})}function fnRefreshGrid(){var a="/Judicial/GetEnteAsignado/?";a+="Id="+$("#TipoEnte").val(),jQuery("#EnteAsignado").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}]),jQuery("#EnteReasignar").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}])}function fnGrabarEnte(){var a,e={ids:a=$("#EnteAsignado").jqGrid("getGridParam","selarrrow")+"|"+$("#EnteReasignar").jqGrid("getGridParam","selarrrow")};0<a.length&&$.ajax({type:"POST",url:"/Judicial/GrabarEnte",dataType:"json",traditional:!0,async:!0,data:e,success:function(a){""==a&&null==a||alert(a,postDatos)},error:function(a){alert("Error al grabar ente."+a)}})}function fnRolSeleccionado(a){var e=window.location.href,i=new URL(e);window.location.href="/Judicial/Rol/?idd="+a+"&tipoComp="+i.searchParams.get("tipoComp")}function fnGuardarGestionesJud(){var a={Rolid:$("#Rolid").val(),EstadoHistorial:$("#EstadoHistorial").val(),MateriaHistorial:$("#MateriaHistorial").val(),FechaHistorial:$("#FechaHistorial").val(),ComentarioHistorial:$("#ComentarioHistorial").val()};$.ajax({type:"POST",url:"/Judicial/GuardarEstadoRol/?",dataType:"json",async:!0,data:a,success:function(a){if(a.success){fnRefreshGridEstados(),$("#ppHistorial").dialog("close");var e=a.RolId;$.ajax({type:"POST",url:"/Judicial/GetDatosRol?idd="+e,success:function(a,e){console.log(a),$("#MateriaJudicial").val(a.MateriaJudicial),$("#Estado").val(a.Estado),3==a.IdMateriaJudicial||9==a.IdMateriaJudicial||10==a.IdMateriaJudicial?($("#tabGestionRol").tabs("enable",1),jQuery("#gridRolLiquidacionGrilla").jqGrid().trigger("reloadGrid",[{page:1}])):$("#tabGestionRol").tabs("disable",1)}})}else alert(a.message)},error:function(a){alert("Error al guardar gestion."+a)}})}function fnActualizarEstadosRol(){$("#EstadoHistorial").empty(),$.ajax({type:"POST",url:"/Judicial/ListarEstadosHistorial",dataType:"json",async:!1,data:{esjid:""==$("#MateriaHistorial").val()?0:$("#MateriaHistorial").val()},success:function(a){$.each(a,function(a,e){$("#EstadoHistorial").append('<option value="'+e.Value+'">'+e.Text+"</option>")})},error:function(a){alert("Error al recuperar los estados rol."+a)}})}function fnRefreshGridEstados(){var a="/Judicial/GetEstados/?";a+="Rolid="+$("#Rolid").val(),jQuery("#gridEstados").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}])}function fnBotonesArchivo(a,e,i){return""!=a?"<div align='center'><button style=\"vertical-align:middle\" onclick=\" fnMuestraDocumentoPJ('"+a+'\');"  class="search"><img width="20px" height="20px" alt="Documento" title="Agregar" src="/Images/botones/doc20.png"></button></div>':""}function ActualizarGestiones(){fnLimpiarFormularioGestion()}function fnLimpiarFormularioGestion(){$("#EstadoHistorial").val("-1"),$("#MateriaHistorial").val("-1"),$("#FechaHistorial").val(""),$("#ComentarioHistorial").val("")}function fnMuestraDocumentoPJ(a){if(""!=a){$("#ppDocto").html("");var e=a.split("."),i=e[e.length-1];switch(i){case"jpg":case"JPG":$("#ppDocto").html('<img src="'+a+'" \tstyle="max-width: 870px;"/>');break;case"pdf":case"PDF":$("#ppDocto").html('<object data="'+a+'" type="application/pdf" width="100%" height="100%"><p>Aparentemente no tienes el plugin para visualizar PDF en el navegador. No hay problema, puedes descargar el archivo desde este link <a href="'+a+'">.</a></p></object>');break;case"doc":case"docx":$("#ppDocto").html('<object data="'+a+'" type="application/word" width="100%" height="100%"><p>Aparentemente no tienes el plugin para visualizar PDF en el navegador. No hay problema, puedes descargar el archivo desde este link <a href="'+a+'">.</a></p></object>');break;default:-1<i.indexOf("do?COD_Opcion")?window.open(a):-1<i.indexOf("do?TIP_Documento")?$("#ppDocto").html('<object data="'+a+'" type="application/pdf" width="100%" height="100%"><p>Aparentemente no tienes el plugin para visualizar PDF en el navegador. No hay problema, puedes descargar el archivo desde este link <a href="'+a+'">.</a></p></object>'):$("#ppDocto").html("El archivo de extesion "+i+" no puede ser visualizado")}$("#ppDocto").dialog("open")}}function fnGuardarEnte(){var a=$("#gridEnte").jqGrid("getGridParam","selarrrow");$.ajax({type:"POST",url:"/Judicial/ActualizarEntesRol",dataType:"json",async:!1,data:{Rolid:""==$("#Rolid").val()?0:$("#Rolid").val(),NuevoEnte:$("#EnteJudicial").val(),ListaEntes:a+""},success:function(a){0<a?(jQuery("#gridEnte").jqGrid().trigger("reloadGrid",[{page:1}]),$("#EnteJudicial").val("")):alert("Error al actualizar los entes."+ex)},error:function(a){alert("Error al actualizar los entes."+a)}})}function fnGuardarDocumentos(a,e){$.ajax({type:"POST",url:"/Judicial/ActualizarDocumentosRol",dataType:"json",async:!1,data:{Rolid:""==$("#Rolid").val()?0:$("#Rolid").val(),Pclid:$("#Pclid").val(),Ctcid:$("#Ctcid").val(),DocumentosAsignar:a,DocumentosEliminar:e},success:function(a){0<a&&(jQuery("#gridDocSinAsignar").jqGrid().trigger("reloadGrid",[{page:1}]),jQuery("#gridDocAsignado").jqGrid().trigger("reloadGrid",[{page:1}]))},error:function(a){alert("Error al grabar los documentos."+a)}})}function fnGuardarDemandado(){var a=$("#gridDemandados").jqGrid("getGridParam","selarrrow");($.Rut.validar($("#DemandadoRut").val())||""==$("#DemandadoRut").val())&&$.ajax({type:"POST",url:"/Judicial/ActualizarDemandadosRol",dataType:"json",async:!1,data:{Rolid:""==$("#Rolid").val()?0:$("#Rolid").val(),DemandadoRut:$("#DemandadoRut").val(),DemandadoNombre:$("#DemandadoNombre").val(),DemandadoRepresentanteLegal:$("#DemandadoRepresentanteLegal").prop("checked"),ListaDemandados:a+""},success:function(a){0<a?(jQuery("#gridDemandados").jqGrid().trigger("reloadGrid",[{page:1}]),$("#DemandadoRut").val(""),$("#DemandadoNombre").val(""),$("#DemandadoRepresentanteLegal").prop("checked",!1)):alert("Error al actualizar los demandados."+ex)},error:function(a){alert("Error al actualizar los demandados.")}})}function fnGuardarRol(){if($("#loading-gif").show(),""==$("#Ctcid").val()||""==$("#Pclid").val()||""==$("#Rol").val()||""==$("#Tribunal").val()||""==$("#TipoCausa").val())alert("Debe ingresar todos los datos mandatorios.");else{var o=$("#Rolid").val(),a=window.location.href,t=new URL(a).searchParams.get("tipoComp");$.ajax({type:"POST",url:"/Judicial/GuardarRol",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:{TipoRol:$("#TipoRol").val(),Rol:$("#Rol").val(),Tribunal:$("#Tribunal").val(),TipoCausa:$("#TipoCausa").val(),FechaIngreso:$("#FechaIngreso").val(),FechaRol:$("#FechaRol").val(),FechaDemanda:$("#FechaDemanda").val(),MateriaJudicial:$("#MateriaJudicial").val(),Estado:$("#Estado").val(),Comentario:$("#Comentario").val(),BloquearRol:$("#BloquearRol").prop("checked"),ActualizarRolPoderJudicial:$("#ActualizarRolPoderJudicial").prop("checked"),ProcesoQuiebra:$("#ProcesoQuiebra").prop("checked"),Rolid:$("#Rolid").val(),Pclid:$("#Pclid").val(),Ctcid:$("#Ctcid").val(),ComboQuiebra:$("#ComboQuiebra").val(),FechaAvenimiento:$("#FechaAvenimiento").val(),MontoAvenimiento:$("#MontoAvenimiento").val(),CuotasAvenimiento:$("#CuotasAvenimiento").val(),MontoCuotaAvenimiento:$("#MontoCuotaAvenimiento").val(),MontoUltimaCuotaAvenimiento:$("#MontoUltimaCuotaAvenimiento").val(),FechaPrimeraCuotaAvenimiento:$("#FechaPrimeraCuotaAvenimiento").val(),FechaUltimaCuotaAvenimiento:$("#FechaUltimaCuotaAvenimiento").val(),InteresAvenimiento:$("#InteresAvenimiento").val(),FechaDemandaAve:$("#FechaDemandaAve").val(),MontoDemanda:$("#MontoDemanda").val(),CuotasDemanda:$("#CuotasDemanda").val(),MontoCuotaDemanda:$("#MontoCuotaDemanda").val(),MontoUltimaCuotaDemanda:$("#MontoUltimaCuotaDemanda").val(),FechaPrimeraCuotaDemanda:$("#FechaPrimeraCuotaDemanda").val(),FechaUltimaCuotaDemanda:$("#FechaUltimaCuotaDemanda").val(),InteresDemanda:$("#InteresDemanda").val(),tipoComp:t},success:function(a){if(-1!=a){if($("#Rolid").val(a),0<o){var e="/Judicial/GetDocumentosPorAsignar?";if(e+="Pclid="+$("#Pclid").val()+"&Ctcid="+$("#Ctcid").val(),jQuery("#gridDocSinAsignar").jqGrid().setGridParam({url:e}),e="/Judicial/GetDocumentosAsignados?",e+="Rolid="+a,jQuery("#gridDocAsignado").jqGrid().setGridParam({url:e}),e="/Judicial/GetRolEntes?",e+="Rolid="+a,jQuery("#gridEnte").jqGrid().setGridParam({url:e}),e="/Judicial/GetDemandados?",e+="Rolid="+a,jQuery("#gridDemandados").jqGrid().setGridParam({url:e}),"P"==t){var i=$("#gridDocSinAsignarPrevisional").jqGrid("getGridParam","selarrrow"),r=$("#gridDocAsignadoPrevisional").jqGrid("getGridParam","selarrrow");fnGuardarDocumentosPrevisional(JSON.stringify(i),JSON.stringify(r))}else{i=$("#gridDocSinAsignar").jqGrid("getGridParam","selarrrow"),r=$("#gridDocAsignado").jqGrid("getGridParam","selarrrow");fnGuardarDocumentos(JSON.stringify(i),JSON.stringify(r))}fnCargarAsociados(),jQuery("#gridDocSinAsignar").jqGrid().trigger("reloadGrid",[{page:1}]),jQuery("#gridDocAsignado").jqGrid().trigger("reloadGrid",[{page:1}]),fnRefreshGridEstados(),jQuery("#gridEnte").jqGrid().trigger("reloadGrid",[{page:1}]),jQuery("#gridDemandados").jqGrid().trigger("reloadGrid",[{page:1}]),fnCargarAsociados(),$("#tabRol").show(),fnCargarTotales()}else{var n=window.location.href;new URL(n);0<n.indexOf("?")&&(n=n.substring(0,n.indexOf("?"))),n+="?idd="+a,n+="&tipoComp="+t,window.location.replace(n)}$("body").removeClass("loading")}else $("body").removeClass("loading"),alert("Error al guardar Rol.");$("#loading-gif").hide()}})}}function FormatCurrency(a,e){if(37!=e.keyCode&&38!=e.keyCode&&39!=e.keyCode&&40!=e.keyCode){var i=a.value;i=i.replace(/\./g,""),i+=a.value="",x=i.split("."),x1=x[0],x2=1<x.length?","+x[1]:"";for(var r=/(\d+)(\d{3})/;r.test(x1);)x1=x1.replace(r,"$1.$2");a.value=x1+x2}}function CheckNumeric(a){return 48<=a.charCode&&a.charCode<=57||8==a.keyCode||46==a.keyCode||44==a.charCode||37==a.keyCode||38==a.keyCode||39==a.keyCode||40==a.keyCode}function fnCargarAsociados(){$.ajax({type:"POST",url:"/Judicial/ListarAsociados",dataType:"json",async:!1,data:{ctcid:""==$("#Ctcid").val()?0:$("#Ctcid").val()},success:function(a){var e=new google.visualization.DataTable;e.addColumn("string","Nombre"),e.addColumn("string","Padre"),e.addColumn("string","ToolTip");for(var i=0;i<a.length;i++){var r;""==a[i].Monto&&""==a[i].RepLegal?(r="<div onclick=\"window.location.href ='/Cartera/Index/?tipo=J&pag=355&r="+a[i].Rut.replace(/\./g,"").replace("-","")+'\';" style="cursor:pointer"><b>'+a[i].Nombre+'</b><div style="color:red; font-style:italic">'+a[i].Rut+"</div></div>",e.addRow([{v:a[i].Id,f:r},a[i].Padre,a[i].Tooltip])):""==a[i].Nombre&&""==a[i].RepLegal?(r="<div onclick=\"window.location.href = '/Judicial/Rol/?idd="+a[i].Id+'\';"  style="cursor:pointer"><b>'+a[i].Caratulado+'</b><div style="color:red; font-style:italic">'+a[i].Rol+'</div><div style="color:blue; font-style:italic">'+a[i].Tribunal+'</div><div style="color:red; font-style:italic">$ '+a[i].Monto+"</div></div>",e.addRow([{v:a[i].Id,f:r},a[i].Padre,a[i].Tooltip])):""!=a[i].RepLegal&&(r="<div><b>"+a[i].Nombre+'</b></div><div style="color:red; font-style:italic">'+a[i].Rut+"</div>","S"==a[i].RepLegal&&(r+='<div style="color:red; font-style:italic">Rep. Legal</div>'),r+='<div style="color:red; font-style:italic">Demandado</div>',e.addRow([{v:a[i].Id,f:r},a[i].Padre,a[i].Tooltip]))}new google.visualization.OrgChart(document.getElementById("chart_div")).draw(e,{allowHtml:!0})},error:function(a){alert("Error al cargar los asociados.")}})}function fnBtnBorradores(){$("#ppBorradores").dialog("open");var a=CKEDITOR.instances.editor1;return a&&a.destroy(!0),CKEDITOR.replace("editor1"),fnBorradorSeleccionado(),!1}function fnBtnAsociados(){return $("#ppAsociados").dialog("open"),!1}function handleCKEditorPost(){var a=CKEDITOR.instances.editor1.getData();$.ajax({type:"POST",url:"/Judicial/GuardarBorrador",dataType:"json",async:!1,data:{Rolid:$("#Rolid").val(),Borradores:$("#Borradores").val(),HTMLBorrador:a},success:function(a){CKEDITOR.instances.editor1.setData(a),alert("Borrador guardado exitosamente.")},error:function(a){alert("Error al cargar el borrador.")}})}function fnBorradorSeleccionado(){""!=$("#Borradores").val()&&null!=$("#Borradores").val()&&$.ajax({type:"POST",url:"/Judicial/GetBorrador",dataType:"json",async:!1,data:{Rolid:$("#Rolid").val(),Borradores:$("#Borradores").val()},success:function(a){fnTraeHistorialBorrador(),CKEDITOR.instances.editor1.setData(a)},error:function(a){alert("Error al cargar el borrador.")}})}function MensajeCerrarBorradores(){return!!window.confirm("Est√° seguro que desea salir sin guardar los √∫ltimos cambios?")}function fnEliminarGestionRol(a){var e={oper:"del",id:a};return!!window.confirm("Est√° seguro que desea eliminar la gesti√≥n?")&&($.ajax({type:"POST",url:"/Judicial/OperRol/",dataType:"json",async:!0,data:e,success:function(a){"OK"!=a?alert(a):(alert("Gesti√≥n eliminada."),jQuery("#gridEstados").jqGrid().trigger("reloadGrid",[{page:1}]))},error:function(a){alert("Error al eliminar la gesti√≥n."+a)}}),!0)}function fnTraeHistorialBorrador(){var a={Rolid:$("#Rolid").val(),Borradores:$("#Borradores").val()};$.ajax({type:"POST",url:"/Judicial/GetHistoriaBorrador/",dataType:"json",async:!0,data:a,success:function(a){null!==a?($("#PrimerBorrador").text(a.creacion),$("#UltimoBorrador").text(a.ultimo)):($("#PrimerBorrador").text(""),$("#UltimoBorrador").text(""))}})}function fnBotonEliminarGestionRol(a,e,i){if("0"!=a){var r=a.split("|");return"0"!=r[1]&&"0"!=r[2]?"<div align='center'><button type='button' class='ui-icon ui-icon-trash' style='height:20px;width:20px'  onclick='fnEliminarGestionRol(\""+a+"\")'>Eliminar</button></div>":""}return""}function fnCargarTotales(){var a=window.location.href;"P"==new URL(a).searchParams.get("tipoComp")?($.ajax({type:"POST",url:"/Judicial/GetTotalDocsAsignadosPrevisional",dataType:"json",async:!1,data:{Rolid:$("#Rolid").val()},success:function(a){totalMontoAsignado=a.monto,totalSaldoAsignado=a.saldo}}),$.ajax({type:"POST",url:"/Judicial/GetTotalDocsPorAsignarPrevisional",dataType:"json",async:!1,data:{Pclid:$("#Pclid").val(),Ctcid:$("#Ctcid").val()},success:function(a){totalMontoPorAsignar=a.monto,totalSaldoPorAsignar=a.saldo}})):($.ajax({type:"POST",url:"/Judicial/GetTotalDocsAsignados",dataType:"json",async:!1,data:{Rolid:$("#Rolid").val()},success:function(a){totalMontoAsignado=a.monto,totalSaldoAsignado=a.saldo}}),$.ajax({type:"POST",url:"/Judicial/GetTotalDocsPorAsignar",dataType:"json",async:!1,data:{Pclid:$("#Pclid").val(),Ctcid:$("#Ctcid").val()},success:function(a){totalMontoPorAsignar=a.monto,totalSaldoPorAsignar=a.saldo}}))}function getColumnIndexByName(a,e){for(var i=a.jqGrid("getGridParam","colModel"),r=0,n=i.length;r<n;r++)if(i[r].name===e)return r;return-1}function rowColor(a){var e,i,r,n=jQuery("#"+a.id),o=getColumnIndexByName(n,"DiasTranscurso"),t=n[0].rows.length;for(console.log(o),console.log(t),e=0;e<t;e++)if(r=(i=n[0].rows[e]).className,console.log(r),0<$.inArray("jqgrow",r.split(" "))){var d=$(i.cells[o]).text();console.log(d)}}function TipoAlerta(a){return a<3?'<span class="ui-icon ui-icon-circle-check green" style="float: left; margin-right: .3em;"></span>':3<=a&&a<5?'<span class="ui-icon ui-icon-alert yellow" style="float: left; margin-right: .3em;"></span>':'<span class="ui-state-error" style="border:0"><span class="ui-icon ui-icon-circle-close" style="float: left; margin-right: .3em;"></span></span>'}function formatAlerta(a,e,i){return TipoAlerta(a)+"<span>"+a+"</span>"}function TipoTrackingDemanda(a){console.log(a);return a<=14?'<span class="ui-icon ui-icon-circle-check green" style="float: left; margin-right: .3em;"></span>':14<a&&a<=18?'<span class="ui-icon ui-icon-alert yellow" style="float: left; margin-right: .3em;"></span>':'<span class="ui-state-error" style="border:0"><span class="ui-icon ui-icon-circle-close" style="float: left; margin-right: .3em;"></span></span>'}function formatTrackingDemanda(a,e,i){return TipoTrackingDemanda(a)+"<span>"+a+"</span>"}function formatPercentage(a,e,i){return ShowProgress(a)}function ShowProgress(a){return'<div class="progress"><div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="'+a.replace("%","")+'" aria-valuemin="0" aria-valuemax="100" style="width:'+a+';"><span>'+a+"</span></div></div>"}function fnBloquearRolJ(e){$(e).hasClass("proceso-on")?$("#BloquearRol").val(!0):$("#BloquearRol").val(!1),$.ajax({type:"POST",url:"/Judicial/BloquearRol",dataType:"json",async:!1,data:{Rolid:""==$("#Rolid").val()?0:$("#Rolid").val(),BloquearRol:$("#BloquearRol").val()},success:function(a){0<a&&($(e).hasClass("proceso-on")?($(e).removeClass("proceso-on"),$(e).addClass("proceso-off")):($(e).removeClass("proceso-off"),$(e).addClass("proceso-on")),location.reload())},error:function(a){alert("Error al (des)bloquear el Rol.")}})}function formatItemAlerta(a,e,i){return"<div onclick=\"fnPanelAlertaTipoReporte('"+i[0]+"','"+a+'\')"style="cursor:pointer"><div>'+a+"</div></div>"}function fnPanelAlertaTipoReporte(a,e){$("#ppPanelAlertaTipoReporte").dialog();$("#ppPanelAlertaTipoReporte").dialog("option","title",e),$("#ppPanelAlertaTipoReporte").dialog("open");var i="/Judicial/ListarPanelAlertaTipoReporte/?";i+="TipoReporte="+a,jQuery("#gridPanelAlertaTipoReporte").jqGrid().setGridParam({url:i}).trigger("reloadGrid",[{page:1}])}function formatItemCliente(a,e,i){return"<div onclick=\"fnPanelAlertaReporteAnalisisCliente('"+i[0]+"','"+a+'\')"style="cursor:pointer"><div>'+a+"</div></div>"}function fnPanelAlertaReporteAnalisisCliente(a,e){$("#ppPanelAlertaReporteAnalisisCliente").dialog();$("#ppPanelAlertaReporteAnalisisCliente").dialog("option","title",e),$("#ppPanelAlertaReporteAnalisisCliente").dialog("open");var i="/Judicial/ListarPanelAlertaReporteAnalisisCliente/?";i+="Pclid="+a,jQuery("#gridPanelAlertaReporteAnalisisCliente").jqGrid().setGridParam({url:i}).trigger("reloadGrid",[{page:1}])}function fnExcelPanelDEmandas(){window.location.href="/Judicial/ExportToExcelPanelDemandas"}function fnBotonEliminarEstampe(a,e,i){return"1"==$("#Prf").val()||"9"==$("#Prf").val()||"13"==$("#Prf").val()?'<div class="tabla"><div class="fila"><div class="col"><button type="button" class="ui-icon ui-icon-trash" style="height:20px;width:20px"  onclick="fnEliminarEstampe(\''+i.slice(0,5)+"')\">Eliminar</button></div></div></div>":""}function fnEliminarEstampe(a){if(1==confirm("¬øDesea eliminar el archivo seleccionado?")){var e=a.split(","),i="/Judicial/EliminarEstampe/?id="+e[0]+"|"+e[1]+"|"+e[2]+"|"+e[3]+"|"+e[4];$.ajax({type:"POST",url:i,dataType:"json",async:!0,success:function(a){alert(a)},error:function(a){alert("Error al eliminar el archivo."+a)}}),fnBuscarEstampes()}}function fnBuscarEstampes(){var a="/Judicial/GetEstampes/?";a+="Pclid="+$("#Pclid").val()+"&Ctcid="+$("#Ctcid").val()+"&Rolid="+$("#Rolid").val(),jQuery("#gridEstampes").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}])}$(function(a){a.datepicker.regional.es={closeText:"Cerrar",prevText:"<Ant",nextText:"Sig>",currentText:"Hoy",monthNames:["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],monthNamesShort:["Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"],dayNames:["Domingo","Lunes","Martes","Mi√©rcoles","Jueves","Viernes","S√°bado"],dayNamesShort:["Dom","Lun","Mar","Mi√©","Juv","Vie","S√°b"],dayNamesMin:["Do","Lu","Ma","Mi","Ju","Vi","S√°"],weekHeader:"Sm",dateFormat:"dd/mm/yy",firstDay:1,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},a.datepicker.setDefaults(a.datepicker.regional.es)}),jQuery.fn.extend({propAttr:$.fn.prop||$.fn.attr}),function(e){jQuery.fn.Rut=function(a){var i={digito_verificador:null,on_error:function(){},on_success:function(){},validation:!0,format:!0,format_on:"change"};e.extend(i,a);return this.each(function(){if(i.format&&jQuery(this).bind(i.format_on,function(){jQuery(this).val(jQuery.Rut.formatear(jQuery(this).val(),null==i.digito_verificador))}),i.validation)if(null==i.digito_verificador)jQuery(this).bind("blur",function(){var a=jQuery(this).val();""==jQuery(this).val()||jQuery.Rut.validar(a)?""!=jQuery(this).val()&&i.on_success():i.on_error()});else{var e=jQuery(this).attr("id");jQuery(i.digito_verificador).bind("blur",function(){var a=jQuery("#"+e).val()+"-"+jQuery(this).val();""==jQuery(this).val()||jQuery.Rut.validar(a)?""!=jQuery(this).val()&&i.on_success():i.on_error()})}})}}(jQuery),jQuery.Rut={formatear:function(a,e){var i=new String(a),r="";if(i=jQuery.Rut.quitarFormato(i),e){var n=i.charAt(i.length-1);i=i.substring(0,i.length-1)}for(;3<i.length;)r="."+i.substr(i.length-3)+r,i=i.substring(0,i.length-3);return""!=(r=i+r)&&e?r+="-"+n:e&&(r+=n),r},quitarFormato:function(a){for(var e=new String(a);-1!=e.indexOf(".");)e=e.replace(".","");for(;-1!=e.indexOf("-");)e=e.replace("-","");return e},digitoValido:function(a){return"0"==a||"1"==a||"2"==a||"3"==a||"4"==a||"5"==a||"6"==a||"7"==a||"8"==a||"9"==a||"k"==a||"K"==a},digitoCorrecto:function(a){return largo=a.length,!(largo<2)&&(2<largo?rut=a.substring(0,largo-1):rut=a.charAt(0),dv=a.charAt(largo-1),jQuery.Rut.digitoValido(dv),null==rut||null==dv?0:(dvr=jQuery.Rut.getDigito(rut),dvr==dv.toLowerCase()))},getDigito:function(a){for(suma=0,mul=2,i=a.length-1;0<=i;i--)suma+=a.charAt(i)*mul,7==mul?mul=2:mul++;return res=suma%11,1==res?"k":0==res?"0":11-res},validar:function(a){if(a=jQuery.Rut.quitarFormato(a),largo=a.length,largo<2)return!1;for(i=0;i<largo;i++)if(!jQuery.Rut.digitoValido(a.charAt(i)))return!1;var e="";for(i=largo-1,j=0;0<=i;i--,j++)e+=a.charAt(i);var r="";for(r+=e.charAt(0),r+="-",cnt=0,i=1,j=2;i<largo;i++,j++)3==cnt?(r+=".",j++,r+=e.charAt(i),cnt=1):(r+=e.charAt(i),cnt++);for(e="",i=r.length-1,j=0;0<=i;i--,j++)e+=r.charAt(i);return!!jQuery.Rut.digitoCorrecto(a)}};var Promise=window.Promise;function urlToPromise(a){return new Promise(function(i,r){JSZipUtils.getBinaryContent(a,function(a,e){a?r(a):i(e)})})}function comprimirEstampes(){var i=new JSZip;$("#gridEstampes").find("tr").find("td").find("a").each(function(){var a=$(this).attr("href"),e=a.replace(/.*\//g,"");e=(e=e.split("\\"))[e.length-1],i.file(e,urlToPromise(a),{binary:!0})}),i.generateAsync({type:"blob"}).then(function(a){saveAs(a,$("#Pclid").val()+"-"+$("#NombreRutDeudor").val()+".zip")})}function fnCursoDemanda(a){fnGuardarCursoDemanda(a,$('#gridPanelDemandas tr[id="'+a+'"] select[id="'+a+'_CursoDemanda"]').val())}function formatCursoDemanda(a,e,i){return tipoCursoDemanda(a,i)}function tipoCursoDemanda(a,e){e[0],e[0],e[0],e[0];var i='<select role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemanda('+e[0]+');"><option role="option" value="-1" selected="selected">--</option><option role="option" value="1">SI</option><option role="option" value="0">NO</option></select>',r='<select disabled role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemanda('+e[0]+');"><option role="option" value="-1">--</option><option role="option" value="1" selected="selected">SI</option><option role="option" value="0">NO</option></select>',n=(e[0],e[0],'<select disabled role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemanda('+e[0]+');"><option role="option" value="-1" selected="selected">--</option><option role="option" value="1">SI</option><option role="option" value="0">NO</option></select>');return"S"==e[19]?"SI"==a?r:i:"N"==e[19]?n:void 0}function fnGuardarCursoDemanda(a,e){var i={panelId:a,cursoDemanda:e,motivo:""};$.ajax({type:"POST",url:"/Judicial/GuardarCursoDemanda/?",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify(i),beforeSend:function(){$("body").addClass("loading")},success:function(a){$("body").removeClass("loading"),jQuery("#gridPanelDemandas").jqGrid().trigger("reloadGrid",[{page:1}])},error:function(a,e,i){$("body").removeClass("loading"),alert("Error al guardar curso de la demanda."+i)}})}function fnBotonesGridDeudorQuiebra(a,e,i){return'<div class="tabla"><div class="fila"><div class="col"><button type="button" class="ui-icon ui-icon-pencil" style="height:20px;width:20px" onclick="fnFormularioDeudorQuiebra(\''+i[0]+"','"+i[1]+"','"+i[2]+"','"+i[3]+"','"+i[4]+"','"+i[5]+"','"+i[6]+"','"+i[7]+"','"+i[8]+"','"+i[9]+"')\" >Editar</button></div></div></div>"}function fnFormularioDeudorQuiebra(a,e,i,r,n,o,t,d,l,s){$("#ppDeudorQuiebra").dialog();$("#ppDeudorQuiebra").dialog("option","title","Editar Deudor en Quiebra"),$("#ppDeudorQuiebra").dialog("open"),$("#frmDeudorQuiebra input[id=NombreDeudor]").val(n),$("#frmDeudorQuiebra input[id=RutDeudor]").val(r),$("#frmDeudorQuiebra input[id=Rol]").val(o),$("#frmDeudorQuiebra input[id=TribunalSelect]").val(a),$("#frmDeudorQuiebra input[id=Tribunal]").val(t),$("#frmDeudorQuiebra select[id=TipoCausa]").val(e),$("#frmDeudorQuiebra select[id=MateriaJudicial]").val(i),$("#btnGuardarQuiebraDeudor").hide()}function fnAgregarDeudorQuiebra(){refrescarFrmDeudorQuiebra();$("#ppDeudorQuiebra").dialog();$("#btnGuardarQuiebraDeudor").show(),refrescarFrmDeudorQuiebra(),$("#ppDeudorQuiebra").dialog("option","title","Agregar Deudor en Quiebra"),$("#ppDeudorQuiebra").dialog("open")}function refrescarFrmDeudorQuiebra(){$("#frmDeudorQuiebra input[id=RutDeudor]").val(""),$("#frmDeudorQuiebra input[id=NombreDeudor]").val(""),$("#frmDeudorQuiebra input[id=Ctcid]").val(""),$("#frmDeudorQuiebra input[id=Rol]").val(""),$("#frmDeudorQuiebra input[id=TribunalSelect]").val(""),$("#frmDeudorQuiebra input[id=Tribunal]").val(""),$("#frmDeudorQuiebra select[id=TipoCausa]").val(""),$("#frmDeudorQuiebra select[id=MateriaJudicial]").val("")}function fnGuardarDeudorQuiebra(){""==$("#RutDeudor").val()||""==$("#NombreDeudor").val()||""==$("#Rol").val()||""==$("#TribunalSelect").val()?alert("Debe ingresar todos los datos mandatorios."):$.ajax({type:"POST",url:"/Judicial/GuardarDeudorQuiebra/",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:{Rol:$("#Rol").val(),Tribunal:$("#TribunalSelect").val(),TipoCausa:$("#TipoCausa").val(),MateriaJudicial:$("#MateriaJudicial").val(),RutDeudor:$("#RutDeudor").val(),NombreDeudor:$("#NombreDeudor").val()},success:function(a){$("body").removeClass("loading"),0==a&&alert("El deudor ya existe en la quiebra"),1<a&&(alert("Registro almacenado con exito"),$("#ppDeudorQuiebra").dialog("close")),a<0&&alert("Error al guardar el registro"),jQuery("#gridDeudorQuiebra").jqGrid().trigger("reloadGrid",[{page:1}])}})}function refrescarFrmAvanceDemandaRol(){$("#frmAvanceDemandaRol input[id=Rol]").val(""),$("#frmAvanceDemandaRol select[id=TipoRol]").val(""),$("#frmAvanceDemandaRol input[id=TribunalSelect]").val(""),$("#frmAvanceDemandaRol input[id=Tribunal]").val(""),$("#frmAvanceDemandaRol select[id=TipoCausa]").val(""),$("#frmAvanceDemandaRol select[id=MateriaJudicial]").val("")}function detailFormatter(a,e,i){var r="<form>";return r+="<fieldset>",r+="<legend>Personalia:</legend>",r+="Name: <input type='text' value='"+i[3]+"' /><br />",r+="Email: <input type='text' /><br />",r+="Date of birth: <input type='text' />",r+="</fieldset>",r+="</form>"}function formatRowQuiebra(a,e,i){return'<div id="div_'+a+'" class="ui-icon ui-icon-plus" style="left: @(left)px;"/><script type="text/javascript">$("#div_'+a+'").click(function () {toggleExpCol("div_'+a+'", "'+a+'", "'+i[4]+'");});<\/script>'}function toggleExpCol(a,r,e){var i=$("#"+a);if(i.hasClass("ui-icon-plus"))i.removeClass("ui-icon-plus"),i.addClass("ui-icon-minus"),$("#gridRolLiquidacionGrilla").closest(".ui-jqgrid").find(".loading").show(),$.ajax({type:"get",contentType:"application/json; charset=utf-8",url:"/Judicial/AvancePanelQuiebra?rowId="+r+"&materia="+e,success:function(a,e){var i=$(a);$(i).each(function(a){$(this).attr("isExpanded",!1),$(this).attr("parent",r)}),$($("#gridRolLiquidacionGrilla tr#"+r)).attr("isExpanded",!0),$('#gridRolLiquidacionGrilla tr[id="'+r+'"]').after(i),$("#gridRolLiquidacionGrilla").closest(".ui-jqgrid").find(".loading").hide()}});else{i.removeClass("ui-icon-minus"),i.addClass("ui-icon-plus");var n=$("#gridRolLiquidacionGrilla").jqGrid(),o=function(a){var i=[],e=$(n).find("tr[parent="+a+"]");return $(e).each(function(a){if("true"==$(this).attr("isExpanded")){var e=o(this.id);$(e).each(function(a){i.push(this)})}i.push(this)}),i},t=o(r);$.each(t,function(a,e){$(e).remove()})}}function fnGuardarAvancePanelQuiebra(a){var e=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] select[id="ComboSolicitante"]').val(),i=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecCostasPersonales"]').val(),r=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="MtoCostasPersonales"]').val(),n=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecIngresoSolicitud"]').val(),o=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecNotificacionSolicitud"]').val(),t=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecAudienciaInicial"]').val(),d=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecAudienciaPrueba"]').val(),l=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecAudienciaFallo"]').val(),s=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecResolucionLiquidacion"]').val(),c=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecResolucionLiquidacionBC"]').val(),u=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecResolucionReorganizacionBC"]').val(),p=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecVerificacion"]').val(),m=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecAcreditacionPoder"]').val(),v=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecJuntaConstitutiva"]').val(),g=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecJuntaDeliberativa"]').val(),f=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] select[id="ComboApruebaRechaza"]').val(),D=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecAcuerdo"]').val(),h=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecVerificadoAcreditado"]').val(),P=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecNomCreditoVerificado"]').val(),b=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecImpugnacion"]').val(),C=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecNomCreditoReconocido"]').val(),R=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecSolAntecedente"]').val(),y=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecRecepcionAntecedente"]').val(),A=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecEnvioAntecedente"]').val(),G=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecEmisionND"]').val(),T=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="MtoEmision"]').val(),E=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecRepartos"]').val(),j=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="MtoRepartos"]').val(),F=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecDevolucion"]').val(),x=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecPgoCostasPersonales"]').val(),w=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="PgoCostasPersonales"]').val(),S=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecAprobacionCtaFinal"]').val(),q=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] input[id="fecCertificadoIncobrable"]').val();$.ajax({type:"POST",url:"/Judicial/GuardarAvancePanelQuiebra/",dataType:"json",async:!0,data:{rolId:$("#Rolid").val(),quiebraId:a,solicitante:e,mtoCostasPersonales:r,fecCostasPersonales:i,fecIngrSolicitud:n,fecNotSolicitud:o,fecAudienciaIni:t,fecAudienciaPrueba:d,fecAudienciaFallo:l,fecResolLiqui:s,fecResolLiquiBC:c,fecResolReorgBC:u,fecVerificacion:p,fecAcreditaPoder:m,fecJuntaConsti:v,fecJuntaDelibe:g,statusAcuerdo:f,fecAcuerdo:D,fecVerificaAcredita:h,fecNomCreditoVeri:P,fecImpugnacion:b,fecNomCreditoRec:C,fecSolAntecedente:R,fecRecepAntecedente:y,fecEnvAntecedente:A,fecEmisionND:G,mtoEmisionND:T,fecRepartos:E,MtoRepartos:j,fecDevolucion:F,pgoCostPersonales:w,fecpgoCostPersonales:x,fecAprobCtaFinal:S,fecCertiIncobrable:q},success:function(a){-1!=a?alert("Avance guardado con √©xito."):alert("Error al guardar Avance Panel Quiebra.")}})}function fnLiquidacionCampos(a,e){var i=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idCostasValue"]'),r=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idCostas"]'),n=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idIngresoSolicitudValue"]'),o=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idIngresoSolicitud"]'),t=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idNotificacionSolicitudValue"]'),d=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idNotificacionSolicitud"]'),l=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaInicialValue"]'),s=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaInicial"]'),c=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaPruebaValue"]'),u=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaPrueba"]'),p=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaFalloValue"]'),m=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaFallo"]'),v=($('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idResolucionLiquiValue"]'),$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idResolucionLiqui"]'),$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idDevolucionValue"]')),g=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idDevolucion"]'),f=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idPgoCostasPersonalesValue"]'),D=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idPgoCostasPersonales"]');"N"==e?(i.hide(400),r.hide(400),n.hide(400),o.hide(400),t.hide(400),d.hide(400),l.hide(400),s.hide(400),c.hide(400),u.hide(400),p.hide(400),m.hide(400),v.hide(400),g.hide(400),f.hide(400),D.hide(400)):(i.show(400),r.show(400),n.show(400),o.show(400),t.show(400),d.show(400),l.show(400),s.show(400),c.show(400),u.show(400),p.show(400),m.show(400),v.show(400),g.show(400),f.show(400),D.show(400))}function fnExcelPanelQuiebras(){window.location.href="/Judicial/ExportToExcelPanelQuiebras"}function fnGuardarPanelQuiebraSindico(){$.ajax({type:"POST",url:"/Judicial/InsertUpdatePanelQuiebraSindico/",dataType:"json",async:!0,data:{rolId:$("#Rolid").val(),sindico:$("#Sindico").val(),veedor:$("#Veedor").val(),interventor:$("#Interventor").val()},success:function(a){-1!=a?alert("guardado con √©xito."):alert("Error al guardar Registro")}})}function fnTraspasarAvenimiento(a){$.ajax({type:"POST",url:"/Judicial/GetDatosAvenimiento?idd="+a,success:function(a,e){""==a.FechaAvenimiento||"0,00"==a.MontoAvenimiento||0==a.CuotasAvenimiento||"0,00"==a.MontoCuotaAvenimiento||"0,00"==a.MontoUltimaCuotaAvenimiento||""==a.FechaPrimeraCuotaAvenimiento||""==a.FechaUltimaCuotaAvenimiento?alert("Debe guardar el avenimiento, antes de traspasar"):""==$("#FechaAvenimiento").val()||"0"==$("#MontoAvenimiento").val()||""==$("#MontoAvenimiento").val()||"0,00"==$("#MontoAvenimiento").val()||""==a.FechaPrimeraCuotaAvenimiento||""==a.FechaUltimaCuotaAvenimiento||"0"==$("#CuotasAvenimiento").val()||""==$("#CuotasAvenimiento").val()||"0,00"==$("#CuotasAvenimiento").val()||"0"==$("#MontoCuotaAvenimiento").val()||""==$("#MontoCuotaAvenimiento").val()||"0,00"==$("#MontoCuotaAvenimiento").val()||"0"==$("#MontoUltimaCuotaAvenimiento").val()||""==$("#MontoUltimaCuotaAvenimiento").val()||"0,00"==$("#MontoUltimaCuotaAvenimiento").val()?alert("Los datos de Avenimiento son requeridos"):$.ajax({type:"POST",url:"/Judicial/InsertarPanelAvenimiento/",dataType:"json",async:!0,data:{rolId:$("#Rolid").val(),rolNumero:$("#Rol").val(),pclid:$("#Pclid").val(),ctcid:$("#Ctcid").val(),tribunalId:$("#Tribunal").val()},success:function(a){-1!=a?alert("traspasado con √©xito."):alert("Error al traspasar Registro")}})}})}function fnBotonesGridPanelAvenimiento(a,e,i){return'<div class="tabla"><div class="fila"><div class="col"><button type="button" class="btn btn-info btn-sm" style="height:20px;width:100px" onclick="fnVerAprobarAvenimiento(\''+a+"','"+i[0]+"','"+i[1]+"','"+i[2]+"','"+i[5]+"','"+i[6]+"')\" >Ver Documentos</button></div></div></div>"}function fnVerAprobarAvenimiento(a,e,i,r,n,o){$("#ppAprobarPanelAvenimiento").dialog();$("#ppAprobarPanelAvenimiento").dialog("option","title","Aprobar Avenimiento  Rol: "+e+" Cliente: "+i+" Deudor: "+r),$("#ppAprobarPanelAvenimiento").dialog("open"),$("#RolIdHidden").val(a),$("#PclidHidden").val(n),$("#CtcidHidden").val(o);var t="/Judicial/GetDocumentosAsignados/?";t+="Rolid="+a,jQuery("#gridDocAvenimiento").jqGrid().setGridParam({url:t}).trigger("reloadGrid",[{page:1}]),$.ajax({type:"POST",url:"/Judicial/GetDatosAvenimiento?idd="+a,dataType:"json",contentType:"application/json; charset=utf-8",async:!0,beforeSend:function(){$("#loadingmessage").css("display","block")},success:function(a,e){$("#FechaAvenimiento").val(a.FechaAvenimiento),$("#MontoAvenimiento").val(a.MontoAvenimiento),$("#CuotasAvenimiento").val(a.CuotasAvenimiento),$("#MontoCuotaAvenimiento").val(a.MontoCuotaAvenimiento),$("#MontoUltimaCuotaAvenimiento").val(a.MontoUltimaCuotaAvenimiento),$("#FechaPrimeraCuotaAvenimiento").val(a.FechaPrimeraCuotaAvenimiento),$("#FechaUltimaCuotaAvenimiento").val(a.FechaUltimaCuotaAvenimiento),$("#InteresAvenimiento").val(a.InteresAvenimiento)},complete:function(){$("#loadingmessage").css("display","none")}})}function fnAprobarAvenimiento(){var a={rolId:$("#RolIdHidden").val(),pclid:$("#PclidHidden").val(),ctcid:$("#CtcidHidden").val(),fechaAvenimiento:$("#FechaAvenimiento").val(),montoAvenimiento:$("#MontoAvenimiento").val(),cuotasAvenimiento:$("#CuotasAvenimiento").val(),montoCuotaAvenimiento:$("#MontoCuotaAvenimiento").val(),montoUltimaCuotaAvenimiento:$("#MontoUltimaCuotaAvenimiento").val(),fechaPrimeraCuotaAvenimiento:$("#FechaPrimeraCuotaAvenimiento").val(),fechaUltimaCuotaAvenimiento:$("#FechaUltimaCuotaAvenimiento").val(),interesAvenimiento:$("#InteresAvenimiento").val()};$.ajax({type:"POST",url:"/Judicial/AprobarAvenimiento",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,beforeSend:function(){$("body").addClass("loading"),$("#loadingmessage").css("display","block")},data:JSON.stringify(a),success:function(a,e,i){$("body").removeClass("loading"),0<=a?alert("Aprobado con exito"):-2==a?alert("No hay documentos en el traspaso avenimiento"):-3==a?alert("Los documentos deben estar en Judicial"):alert("Error al aprobar avenimiento")},error:function(a,e,i){$("#loadingmessage").css("display","none"),$("body").removeClass("loading"),alert("Ha ocurrido un problema. "+i)},complete:function(){$("#loadingmessage").css("display","none"),$("body").removeClass("loading"),$("#ppAprobarPanelAvenimiento").dialog("close"),jQuery("#gridPanelAvenimiento").jqGrid().trigger("reloadGrid",[{page:1}])}})}function fnMostrarRepartos(a){$("#QuiebraIdHidden").val(a);$("#ppPanelQuiebraRepartos").dialog();$("#ppPanelQuiebraRepartos").dialog("open");var e="/Judicial/ListarPanelQuiebraRepartos/?";e+="quiebraId="+a,jQuery("#gridRepartosPanelQuiebra").jqGrid().setGridParam({url:e}).trigger("reloadGrid",[{page:1}])}function fnMostrarIngresoReparto(){$("#ppAddReparto").dialog();$("#ppAddReparto").dialog("open"),$("#MtoReparto").val(0),$("#fecReparto").val("")}function formatfloat(a,e){for(var i=""+Math.floor(a),r=a%1,n=i.length,o="";0<(n-=3);)o="."+i.substr(n,3)+o;return i.substr(0,n+3)+o+(r?","+Math.round(r*Math.pow(10,e||2)):"")}function fnGrabarPanelQuiebraReparto(){""!=$("#fecReparto").val()&&""!=$("#MtoReparto").val()&&0!=$("#MtoReparto").val()?$.ajax({type:"POST",url:"/Judicial/InsertPanelQuiebraReparto/",dataType:"json",async:!0,data:{quiebraId:$("#QuiebraIdHidden").val(),fecReparto:$("#fecReparto").val(),MtoReparto:$("#MtoReparto").val()},success:function(a){0<a&&alert("Reparto ingresado")},error:function(a,e,i){$("body").removeClass("loading"),alert("Ha ocurrido un problema. "+i)},complete:function(){$("body").removeClass("loading"),$("#ppAddReparto").dialog("close");var a="/Judicial/ListarPanelQuiebraRepartos/?";a+="quiebraId="+$("#QuiebraIdHidden").val(),jQuery("#gridRepartosPanelQuiebra").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}]),$.ajax({type:"POST",url:"/Judicial/GetDatosPanelQuiebraItem?quiebraId="+$("#QuiebraIdHidden").val(),dataType:"json",contentType:"application/json; charset=utf-8",async:!0,success:function(a,e){$("#fecRepartos").val(a.FechaReparto),$("#MtoRepartos").val(a.MontoReparto),$("#MtoRepartos").val(formatfloat($("#MtoRepartos").val(),0))}})}}):alert("Ingrese los registros")}function fnPanelQuiebraValidacionesEventos(a){var e=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] select[id="ComboSolicitante"]').val(),i=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idCostasValue"]'),r=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idCostas"]'),n=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idIngresoSolicitudValue"]'),o=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idIngresoSolicitud"]'),t=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idNotificacionSolicitudValue"]'),d=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idNotificacionSolicitud"]'),l=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaInicialValue"]'),s=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaInicial"]'),c=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaPruebaValue"]'),u=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaPrueba"]'),p=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaFalloValue"]'),m=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idAudienciaFallo"]'),v=($('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idResolucionLiquiValue"]'),$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idResolucionLiqui"]'),$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idDevolucionValue"]')),g=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idDevolucion"]'),f=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idPgoCostasPersonalesValue"]'),D=$('#gridRolLiquidacionGrilla tr[id="'+a+'Details"] li[id="idPgoCostasPersonales"]');"N"==e&&(i.hide(400),r.hide(400),n.hide(400),o.hide(400),t.hide(400),d.hide(400),l.hide(400),s.hide(400),c.hide(400),u.hide(400),p.hide(400),m.hide(400),v.hide(400),g.hide(400),f.hide(400),D.hide(400)),"S"==e&&(i.show(400),r.show(400),n.show(400),o.show(400),t.show(400),d.show(400),l.show(400),s.show(400),c.show(400),u.show(400),p.show(400),m.show(400),v.show(400),g.show(400),f.show(400),D.show(400)),$("#fecCostasPersonales").datepicker({showButtonPanel:!0,maxDate:0,maxDate:0}),$("#fecIngresoSolicitud").datepicker({showButtonPanel:!0,maxDate:0,maxDate:0}),$("#fecNotificacionSolicitud").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecAudienciaInicial").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecAudienciaPrueba").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecAudienciaFallo").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecResolucionLiquidacion").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecResolucionLiquidacionBC").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecResolucionReorganizacionBC").datepicker({showButtonPanel:!0,maxDate:0}),$("#MtoCostasPersonales").val(formatfloat($("#MtoCostasPersonales").val(),0)),$("#MtoCostasPersonales").keyup(function(a){37<=a.which&&a.which<=40||$(this).val(function(a,e){return e.replace(/^0+/,"").replace(/\D/g,"").replace(/\B(?=(\d{3})+(?!\d))/g,".")})}),$("#fecVerificacion").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecAcreditacionPoder").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecJuntaConstitutiva").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecJuntaDeliberativa").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecAcuerdo").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecVerificadoAcreditado").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecNomCreditoVerificado").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecImpugnacion").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecNomCreditoReconocido").datepicker({showButtonPanel:!0,maxDate:0}),$("#MtoEmision").prop("disabled",!0),$("#fecSolAntecedente").datepicker({showButtonPanel:!0,maxDate:0,onSelect:function(a){$("#fecRecepcionAntecedente").datepicker("enable")}}),$("#fecRecepcionAntecedente").datepicker({showButtonPanel:!0,maxDate:0,disabled:!0,onSelect:function(a){$("#fecEnvioAntecedente").datepicker("enable")}}),$("#fecEnvioAntecedente").datepicker({showButtonPanel:!0,maxDate:0,disabled:!0,onSelect:function(a){$("#fecEmisionND").datepicker("enable"),$("#MtoEmision").prop("disabled",!1)}}),$("#fecEmisionND").datepicker({showButtonPanel:!0,maxDate:0,disabled:!0}),""!=$("#fecSolAntecedente").val()&&$("#fecRecepcionAntecedente").datepicker("enable"),""!=$("#fecRecepcionAntecedente").val()&&$("#fecEnvioAntecedente").datepicker("enable"),""!=$("#fecEnvioAntecedente").val()&&($("#fecEmisionND").datepicker("enable"),$("#MtoEmision").prop("disabled",!1)),$("#fecRepartos").datepicker({showButtonPanel:!0,maxDate:0,disabled:!0}),$("#fecDevolucion").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecPgoCostasPersonales").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecAprobacionCtaFinal").datepicker({showButtonPanel:!0,maxDate:0}),$("#fecCertificadoIncobrable").datepicker({showButtonPanel:!0,maxDate:0}),$("#MtoEmision").val(formatfloat($("#MtoEmision").val(),0)),$("#MtoEmision").keyup(function(a){37<=a.which&&a.which<=40||$(this).val(function(a,e){return e.replace(/^0+/,"").replace(/\D/g,"").replace(/\B(?=(\d{3})+(?!\d))/g,".")})}),$("#MtoRepartos").prop("disabled",!0),$("#MtoRepartos").val(formatfloat($("#MtoRepartos").val(),0)),$("#MtoRepartos").keyup(function(a){37<=a.which&&a.which<=40||$(this).val(function(a,e){return e.replace(/^0+/,"").replace(/\D/g,"").replace(/\B(?=(\d{3})+(?!\d))/g,".")})}),$("#PgoCostasPersonales").val(formatfloat($("#PgoCostasPersonales").val(),0)),$("#PgoCostasPersonales").keyup(function(a){37<=a.which&&a.which<=40||$(this).val(function(a,e){return e.replace(/^0+/,"").replace(/\D/g,"").replace(/\B(?=(\d{3})+(?!\d))/g,".")})}),$("#ppPanelQuiebraRepartos").dialog({autoOpen:!1,modal:!0,title:"Datos de Repartos",maxWidth:250,maxHeight:400,width:250,height:400})}function fnListarPanelMonitoreoExternoRol(a){var e=""==$(a).val()?0:$(a).val();if(0!=$("#Pclid").val()&&0!=$("#Ctcid").val()){var i="/Judicial/ListarPanelMonitoreoExternoRol/?";i+="zonaId="+e,jQuery("#gridMonitoreoExternoRol").jqGrid().setGridParam({url:i}).trigger("reloadGrid",[{page:1}])}}function fnOnLoadCompleteExternoDemandas(a,e){var i=jQuery("#"+a.id),r=i.jqGrid("getCol","SaldoCartera",!1,"sum");sumSaldoSinDemanda=i.jqGrid("getCol","SaldoSinDemanda",!1,"sum"),sumPorSaldoSinDemanda=100*sumSaldoSinDemanda/r,sumSaldoDemandado=i.jqGrid("getCol","SaldoDemandado",!1,"sum"),sumPorSaldoDemandado=100*sumSaldoDemandado/r,sumSaldoDemandadoDosAnios=i.jqGrid("getCol","SaldoDemandadoDosAnios",!1,"sum"),sumPorSaldoDemandadoDosAnios=100*sumSaldoDemandadoDosAnios/r,i.jqGrid("footerData","set",{Cliente:"Total General:",SaldoCartera:r,SaldoSinDemanda:sumSaldoSinDemanda,PorSaldoSinDemanda:sumPorSaldoSinDemanda.toFixed(2).toString()+"%",SaldoDemandado:sumSaldoDemandado,PorSaldoDemandado:sumPorSaldoDemandado.toFixed(2).toString()+"%",SaldoDemandadoDosAnios:sumSaldoDemandadoDosAnios,PorSaldoDemandadoDosAnios:sumPorSaldoDemandadoDosAnios.toFixed(2).toString()+"%"})}function fnOnLoadCompleteSiiClientes(a,e){var i=jQuery("#"+a.id),r=i.jqGrid("getCol","SaldoCartera",!1,"sum");sumSaldoVerde=i.jqGrid("getCol","SaldoVerde",!1,"sum"),sumPorSaldoVerde=100*sumSaldoVerde/r,sumSaldoAmarillo=i.jqGrid("getCol","SaldoAmarillo",!1,"sum"),sumPorSaldoAmarillo=100*sumSaldoAmarillo/r,sumSaldoRojo=i.jqGrid("getCol","SaldoRojo",!1,"sum"),sumPorSaldoRojo=100*sumSaldoRojo/r,i.jqGrid("footerData","set",{Cliente:"Total General:",SaldoCartera:r,SaldoVerde:sumSaldoVerde,PorSaldoVerde:sumPorSaldoVerde.toFixed(2).toString()+"%",SaldoAmarillo:sumSaldoAmarillo,PorSaldoAmarillo:sumPorSaldoAmarillo.toFixed(2).toString()+"%",SaldoRojo:sumSaldoRojo,PorSaldoRojo:sumPorSaldoRojo.toFixed(2).toString()+"%"})}function fnOnLoadCompleteInternoClientes(a,e){var i=jQuery("#"+a.id),r=i.jqGrid("getCol","TotalCausas",!1,"sum");sumActualizadasCount=i.jqGrid("getCol","ActualizadasCount",!1,"sum"),sumNoActualizadasCount=i.jqGrid("getCol","NoActualizadasCount",!1,"sum"),sumPorcentaje=100*sumActualizadasCount/r,sumACount=i.jqGrid("getCol","ACount",!1,"sum"),sumBCount=i.jqGrid("getCol","BCount",!1,"sum"),sumCCount=i.jqGrid("getCol","CCount",!1,"sum"),sumDCount=i.jqGrid("getCol","DCount",!1,"sum"),i.jqGrid("footerData","set",{Cliente:"Total General:",TotalCausas:r,ActualizadasCount:sumActualizadasCount,NoActualizadasCount:sumNoActualizadasCount,Porcentaje:sumPorcentaje.toFixed(2).toString()+"%",ACount:sumACount,BCount:sumBCount,CCount:sumCCount,DCount:sumDCount})}function fnCargarOrgChartPanelQuiebra(){$.ajax({type:"POST",url:"/Judicial/ListarPanelQuiebraGrafico",dataType:"json",async:!1,data:{},success:function(a){var e=new google.visualization.DataTable;e.addColumn("string","Nombre"),e.addColumn("string","Padre"),e.addColumn("string","ToolTip");for(var i=0;i<a.length;i++){var r;r='<div style="color:red; font-style:italic">'+a[i].Item+'</div><div style="color:blue; font-style:italic">'+a[i].Total+'</div><span class="badge badge-info">'+a[i].MtoAsignado+"</span>",e.addRow([{v:a[i].Id,f:r},a[i].Parent,a[i].Item])}new google.visualization.OrgChart(document.getElementById("chartPanelQuiebra")).draw(e,{allowHtml:!0})},error:function(a){alert("Error al cargar el grafico.")}})}function TipoTrackingPublicacionLiquidacion(a){console.log(a);return a<=14?'<span class="ui-icon ui-icon-circle-check green" style="float: left; margin-right: .3em;"></span>':14<a&&a<=25?'<span class="ui-icon ui-icon-alert yellow" style="float: left; margin-right: .3em;"></span>':'<span class="ui-state-error" style="border:0"><span class="ui-icon ui-icon-circle-close" style="float: left; margin-right: .3em;"></span></span>'}function formatTrackingPublicacionLiquidacion(a,e,i){return TipoTrackingDemanda(a)+"<span>"+a+"</span>"}function TipoTrackingPublicacionReorganizacion(a){console.log(a);return a<=2?'<span class="ui-icon ui-icon-circle-check green" style="float: left; margin-right: .3em;"></span>':2<a&&a<=5?'<span class="ui-icon ui-icon-alert yellow" style="float: left; margin-right: .3em;"></span>':'<span class="ui-state-error" style="border:0"><span class="ui-icon ui-icon-circle-close" style="float: left; margin-right: .3em;"></span></span>'}function formatTrackingPublicacionReorganizacion(a,e,i){return TipoTrackingDemanda(a)+"<span>"+a+"</span>"}function CargarProyeccion(){$.ajax({type:"POST",url:"/Judicial/ListarPanelQuiebraProyeccion/",dataType:"json",async:!1,success:function(a){""!=a&&$("#panelQuiebraProyeccion").html(a)},error:function(a){alert("Error al recuperar Proyeccion."+a)}})}function change_checkbox(a){var e=$(a),i=jQuery("#gridPorTraspasar"),r=a.checked;if(e.is(".groupHeader")){e.closest("tr").nextUntil("tr.gridPorTraspasarghead_0").find('.cbox[type="checkbox"]').each(function(){this.checked&&r||i.setSelection($(this).closest("tr").attr("id"),!0)})}else{var n=e.closest("tr").prevAll("tr.gridPorTraspasarghead_0:first").nextUntil("tr.gridPorTraspasarghead_0").andSelf().find('[type="checkbox"]'),o=n.filter(".cbox"),t=n.filter(".groupHeader"),d=!!r&&o.filter(":checked").length===o.length;t.prop("checked",d)}}function fnOnSelectAllTraspaso(a,e){$("input.groupHeader").attr("checked",e)}function fnAbrirMotivoNoDemandables(){$("#MotivoRechazoDemanda").val(""),$("#ppMotivoNoDemanda").dialog("open")}function fnDocumentosNoDemandables(){var a;""!=(a=$("#gridPorTraspasar").jqGrid("getGridParam","selarrrow"))?""!=$("#MotivoRechazo").val()?$.ajax({type:"POST",url:"/Judicial/DocumentosNoDemandables/",dataType:"json",async:!0,data:{ids:JSON.stringify(a),motivo:$("#MotivoRechazoDemanda").val()},success:function(a){0<a&&alert("Realizado con exito")},error:function(a,e,i){$("body").removeClass("loading")},complete:function(){$("body").removeClass("loading"),$("#ppMotivoNoDemanda").dialog("close"),jQuery("#gridPorTraspasar").jqGrid().trigger("reloadGrid",[{page:1}])}}):alert("Ingrese el motivo"):alert("Debe seleccionar uno o mas documentos")}function fnExcelReport(){var a=$("#gridPanelDemandaReporte").clone();a.find('[style*="display:none;"]').remove(),tab=a;var e=new Array,i="reporte";switch($("#TipoReportePanelDemanda").val()){case"1":e.push(["Cliente","Rut","Deudor","Asegurado","Ingreso","Traspaso","Ingreso Judicial","Fecha de Env√≠o de Confecci√≥n","Fecha de Entrega","Fecha de Ingreso Tribunal","Correcciones","Comentarios"]),i="Total Meses Anteriores";break;case"2":e.push(["Cliente","Rut","Deudor","Asegurado","Ingreso","Traspaso","Ingreso Judicial","Fecha de Env√≠o de Confecci√≥n","Fecha de Entrega","Fecha de Ingreso Tribunal","Correcciones","Comentarios"]),i="Total Mes Actual";break;case"3":e.push(["Cliente","Rut","Deudor","Asegurado","Ingreso","Traspaso","Ingreso Judicial","Fecha de Env√≠o de Confecci√≥n","Fecha de Entrega","Fecha de Ingreso Tribunal","Correcciones","Comentarios"]),i="Total Demandas";break;case"4":e.push(["Cliente","Rut","Deudor","Asegurado","Ingreso","Traspaso","Ingreso Judicial","Alerta","Comentarios"]),i="Demandas No Asignadas";break;case"5":e.push(["Encargado","Cliente","Rut","Deudor","Asegurado","Ingreso","Traspaso","Fecha de Env√≠o de Confecci√≥n","Comentarios"]),i="Demandas Asignadas";break;case"6":e.push(["Encargado","Cliente","Rut","Deudor","Asegurado","Fecha de Env√≠o de Confecci√≥n","Correciones","Alerta","Comentarios"]),i="Demandas Sin Confeccionar";break;case"7":e.push(["Cliente","Rut","Deudor","Asegurado","Ingreso","Traspaso","Ingreso Judicial","Fecha de Env√≠o de Confecci√≥n","Fecha de Entrega","Correcciones","Cantidad de Correcciones","Comentarios"]),i="Demandas Confeccionadas";break;case"8":e.push(["Cliente","Rut","Deudor","Asegurado","Ingreso Judicial","Fecha de Env√≠o de Confecci√≥n","Fecha de Entrega","Fecha de Ingreso Tribunal","Alerta","Alerta Tribunal","Tracking Demanda","Comentarios"]),i="Demandas Ingresadas a Tribunal";break;case"9":e.push(["Cliente","Rut","Deudor","Asegurado","Fecha de Env√≠o de Confecci√≥n","Fecha de Entrega","Alerta","Comentarios"]),i="Demandas No Ingresadas a Tribunal"}var r=e[0].length,n=document.getElementsByTagName("body")[0],o=document.createElement("table");o.id="tbltes3";for(var t=o.insertRow(-1),d=0;d<r;d++){var l=document.createElement("th");l.innerHTML=e[0][d],t.appendChild(l)}for(var s=document.createElement("tbody"),c=1;c<tab[0].rows.length;c++){for(var u=document.createElement("tr"),p=0;p<r;p++){var m=document.createElement("td"),v=document.createTextNode($(tab[0].rows[c]).find("td:eq("+p+")").text());m.appendChild(v),u.appendChild(m)}s.appendChild(u)}o.appendChild(s),n.appendChild(o),o.setAttribute("style","display:none;"),tableToExcel("tbltes3",i,i);var g=document.getElementById("tbltes3");g.parentNode.removeChild(g)}Promise||(Promise=JSZip.external.Promise);var tableToExcel=function(){var l='<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head>\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e<meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>';return function(a,e,i){a.nodeType||(a=document.getElementById(a));var r,n,o={worksheet:e||"Worksheet",table:a.innerHTML},t="data:application/vnd.ms-excel;base64,"+(n=o,r=l.replace(/{(\w+)}/g,function(a,e){return n[e]}),window.btoa(unescape(encodeURIComponent(r))));if(0<window.navigator.userAgent.indexOf("MSIE ")||navigator.userAgent.match(/Trident.*rv\:11\./)){if(window.navigator.msSaveBlob){var d=new Blob([l],{type:"application/csv;charset=utf-8;"});navigator.msSaveBlob(d,i+".xls")}}else $("#linkExport").attr("href",t),$("#linkExport").attr("download",i+".xls")}}();function fnBuscarDocsDeudorTraspasados(){if(0!=$("#Ctcid").val()){var a="/Judicial/GetTraspasoJudicialHechoDeudor/?";a+="Ctcid="+$("#Ctcid").val(),jQuery("#gridPorRevertir").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}])}}function fnRefreshGridPanelDemandasPrevisional(){jQuery("#gridPanelDemandas").jqGrid().setGridParam({url:"/Judicial/ListarPanelDemandasPrevisional"}).trigger("reloadGrid",[{page:1}])}function fnGuardarDocumentosPrevisional(a,e){$.ajax({type:"POST",url:"/Judicial/ActualizarDocumentosRolPrevisional",dataType:"json",async:!1,data:{Rolid:""==$("#Rolid").val()?0:$("#Rolid").val(),Pclid:$("#Pclid").val(),Ctcid:$("#Ctcid").val(),DocumentosAsignar:a,DocumentosEliminar:e},success:function(a){0<a&&(jQuery("#gridDocSinAsignarPrevisional").jqGrid().trigger("reloadGrid",[{page:1}]),jQuery("#gridDocAsignadoPrevisional").jqGrid().trigger("reloadGrid",[{page:1}]))},error:function(a){alert("Error al grabar los documentos."+a)}})}function fnCursoDemandaPrevisional(a){fnGuardarCursoDemandaPrevisional(a,$('#gridPanelDemandas tr[id="'+a+'"] select[id="'+a+'_CursoDemanda"]').val())}function fnGuardarCursoDemandaPrevisional(a,e){var i={panelId:a,cursoDemanda:e,motivo:""};$.ajax({type:"POST",url:"/Judicial/GuardarCursoDemandaPrevisional?",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify(i),beforeSend:function(){$("body").addClass("loading")},success:function(a){$("body").removeClass("loading"),jQuery("#gridPanelDemandas").jqGrid().trigger("reloadGrid",[{page:1}])},error:function(a,e,i){$("body").removeClass("loading"),alert("Error al guardar curso de la demanda."+i)}})}function formatCursoDemandaPrevisional(a,e,i){return tipoCursoDemandaPrevisional(a,i)}function tipoCursoDemandaPrevisional(a,e){e[0],e[0],e[0],e[0];var i='<select role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemandaPrevisional('+e[0]+');"><option role="option" value="-1" selected="selected">--</option><option role="option" value="1">SI</option><option role="option" value="0">NO</option></select>',r='<select disabled role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemandaPrevisional('+e[0]+');"><option role="option" value="-1">--</option><option role="option" value="1" selected="selected">SI</option><option role="option" value="0">NO</option></select>',n=(e[0],e[0],'<select disabled role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemandaPrevisional('+e[0]+');"><option role="option" value="-1" selected="selected">--</option><option role="option" value="1">SI</option><option role="option" value="0">NO</option></select>');return"S"==e[17]?"SI"==a?r:i:"N"==e[17]?n:void 0}function fnBotonesGridPanelDemandasPrevisional(a,e,i){return'        <div class="tabla"><div class="fila">            <div class="col"><button type="button" class="ui-icon ui-icon-document" style="height:20px;width:20px" onclick="fnEditarPanelPrevisional(\''+i+"')\">Editar</button></div>        </div></div>"}function fnBotonEliminarPanelDemandasPrevisional(a,e,i){return'        <div class="tabla"><div class="fila">            <div class="col"><button type="button" class="ui-icon ui-icon-trash" style="height:20px;width:20px" onclick="fnEliminarPanelDemandaPrevisional(\''+i+"')\">Eliminar</button></div>        </div></div>"}function fnEditarPanelPrevisional(a){var e=a.split(","),i={};i.PanelId=e[0],i.NombreCliente=e[5],i.RutDeudor=e[6],i.NombreDeudor=e[7],i.EncarConfec=e[10],i.FecConfec=e[11],i.FecEntrega=e[12],i.FecTribunal=e[13],i.Comentarios=e[16],i.PanelProcesado=e[17],i.UsrId=e[21],i.Pclid=e[22],i.Ctcid=e[23],i.RutCliente=e[24],i.CountFechaEntrega=e[25];var r=$("#ppAvanceDemanda").dialog();if(frmAvanceDemandaReset(),$("#frmAvanceDemanda input[id=PanelProcesado]").val(i.PanelProcesado),"S"==i.PanelProcesado?($("#EnviaFechaEntrega").prop("disabled",!0),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!0)):($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1)),0!=i.UsrId&&i.UsrId!=$("#frmAvanceDemanda input[id=GetUsuario]").val()&&($("#EnviaFechaEntrega").prop("disabled",!0),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!0)),13!=$("#frmAvanceDemanda input[id=GetPerfil]").val()&&10!=$("#frmAvanceDemanda input[id=GetPerfil]").val()||($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaConfeccion]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaConfeccion]").datepicker("option","minDate",null),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("option","minDate",null),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("option","maxDate",null)),6==$("#frmAvanceDemanda input[id=GetPerfil]").val()&&($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1)),7==$("#frmAvanceDemanda input[id=GetPerfil]").val()&&($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!1)),$("#frmAvanceDemanda input[id=PanelId]").val(i.PanelId),$("#frmAvanceDemanda input[id=usridHidden]").val(i.UsrId),$("#frmAvanceDemanda input[id=rutDeudorHidden]").val(i.RutDeudor),$("#frmAvanceDemanda input[id=nombreDeudorHidden]").val(i.NombreDeudor),$("#frmAvanceDemanda input[id=rutClienteHidden]").val(i.RutCliente),$("#frmAvanceDemanda input[id=nombreClienteHidden]").val(i.NombreCliente),$("#frmAvanceDemanda input[id=pclidHidden]").val(i.Pclid),$("#frmAvanceDemanda input[id=ctcidHidden]").val(i.Ctcid),$("#frmAvanceDemanda input[id=CountFechaEntrega]").val(i.CountFechaEntrega),$("#ppAvanceDemanda").dialog("open"),""==i.EncarConfec||null==i.EncarConfec?($("#Confeccion").show(),$("#Correcciones").hide(),$("#IngresoTribunal").hide(),$("#buscarEncargado").show(),$("#MostrarEncargado").hide()):($("#Confeccion").show(),$("#Correcciones").show(),$("#IngresoTribunal").show(),$("#buscarEncargado").hide(),$("#MostrarEncargado").show(),$("#frmAvanceDemanda label[for=Encargado]").text(i.EncarConfec)),r.dialog("option","height",$("#divTabla").outerHeight()+100),0==i.CountFechaEntrega?($("#IngresoTribunal").hide(),$("#flagTituloEnviaFechaEntrega").hide(),$("#EnviaFechaEntrega").hide(),$("#EnviaFechaEntrega").prop("checked",!0),$("#FechaEntrega").datepicker("enable")):($("#IngresoTribunal").show(),$("#flagTituloEnviaFechaEntrega").show(),$("#EnviaFechaEntrega").show(),$("#IngresoTribunal").show()),r.dialog("option","height",$("#divTabla").outerHeight()+100),""==i.FecConfec||null==i.FecConfec)$("#FechaConfeccion").datepicker().datepicker("setDate","today");else{var n=i.FecConfec.replace(/\D+/g,""),o=("0"+(d=new Date(parseInt(n))).getDate()).slice(-2)+"/"+("0"+(d.getMonth()+1)).slice(-2)+"/"+d.getFullYear();$("#frmAvanceDemanda input[id=FechaConfeccion]").val(o)}if(""==i.FecEntrega||null==i.FecEntrega)$("#frmAvanceDemanda input[id=FechaEntrega]").val(""),$("#frmAvanceDemanda input[id=FechaEntregaHidden]").val("");else{n=i.FecEntrega.replace(/\D+/g,"");var t=("0"+(d=new Date(parseInt(n))).getDate()).slice(-2)+"/"+("0"+(d.getMonth()+1)).slice(-2)+"/"+d.getFullYear();$("#frmAvanceDemanda input[id=FechaEntrega]").val(t),$("#frmAvanceDemanda input[id=FechaEntregaHidden]").val(t)}if(""==i.FecTribunal||null==i.FecTribunal)$("#frmAvanceDemanda input[id=FechaTribunal]").val("");else{n=i.FecTribunal.replace(/\D+/g,"");var d,l=("0"+(d=new Date(parseInt(n))).getDate()).slice(-2)+"/"+("0"+(d.getMonth()+1)).slice(-2)+"/"+d.getFullYear();$("#frmAvanceDemanda input[id=FechaTribunal]").val(l)}$("#frmAvanceDemanda textarea[id=Comentarios]").val(i.Comentarios)}function fnEliminarPanelDemandaPrevisional(a){if(1==confirm("Desea eliminar esta demanda?")){var e="/Judicial/EliminarPanelDemandaPrevisional?IdPanelDemanda="+a.split(",")[0];$.ajax({type:"POST",url:e,dataType:"json",async:!0,success:function(a){jQuery("#gridPanelDemandas").jqGrid().trigger("reloadGrid",[{page:1}])},error:function(a){alert("Error al eliminar la demanda."+a)}})}}function fnGuardarAvanceDemandaPrevisional(){var a=""==$("#usrid").val()?$("#frmAvanceDemanda input[id=usridHidden]").val():$("#usrid").val(),e={panelId:$("#PanelId").val(),userIdEncargado:a,fechaEnvio:$("#FechaConfeccion").val(),flagEnviaFechaEntrega:$("#EnviaFechaEntrega").prop("checked"),fechaEntrega:$("#FechaEntrega").val(),fechaTribunales:$("#FechaTribunal").val(),comentarios:$("#Comentarios").val()};""!=a&&"0"!=a?$.ajax({type:"POST",url:"/Judicial/GuardarAvanceDemandaPrevisional?",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify(e),success:function(a){0<a?(fnRefreshGridPanelDemandasPrevisional(),$("#ppAvanceDemanda").dialog("close")):alert(a)},error:function(a,e,i){alert("Error al guardar Avance demanda."+i)}}):alert("Debe ingresar el encargado de la demanda")}function fnGuardarAvanceDemandaRolPrevisional(){""==$("#frmAvanceDemanda input[id=ctcidHidden]").val()||""==$("#frmAvanceDemanda input[id=pclidHidden]").val()||""==$("#Rol").val()||""==$("#TribunalSelect").val()||""==$("#TipoCausa").val()||""==$("#MateriaJudicial").val()?alert("Debe ingresar todos los datos mandatorios."):$.ajax({type:"POST",url:"/Judicial/GuardarAvanceDemandaRolPrevisional/",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:{TipoRol:$("#TipoRol").val(),Rol:$("#Rol").val(),Tribunal:$("#TribunalSelect").val(),TipoCausa:$("#TipoCausa").val(),MateriaJudicial:$("#MateriaJudicial").val(),Rolid:$("#Rolid").val(),Pclid:$("#frmAvanceDemanda input[id=pclidHidden]").val(),Ctcid:$("#frmAvanceDemanda input[id=ctcidHidden]").val(),ComboQuiebra:$("#ComboQuiebra").val(),panelId:$("#PanelId").val(),fechaTribunales:$("#FechaDemanda").val(),flagEnviaFechaEntrega:$("#EnviaFechaEntrega").prop("checked"),fechaEntrega:$("#frmAvanceDemanda input[id=FechaEntrega]").val(),RutDeudor:$("#frmAvanceDemanda input[id=rutDeudorHidden]").val()},success:function(a){$("body").removeClass("loading"),a.success?($("#Rolid").val(a.rolId),"0"!=$("#Rolid").val()&&""!=$("#Rolid").val()&&(alert("El Rol fue guardado con exito!"),fnRefreshGridPanelDemandasPrevisional(),$("#ppAgragarRol").dialog("close"),$("#EnviaFechaEntrega").prop("disabled",!0),$("#EnviaFechaEntrega").prop("checked",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"))):($("body").removeClass("loading"),alert("Error al guardar Rol."))}})}function fnExcelPanelDemandasPrevisional(){window.location.href="/Judicial/ExportToExcelPanelDemandasPrevisional"}function fnBotonesGridConfeccionDemandaPrevisional(a,e,i){return'<div class="tabla">                <div class="fila" style="margin-left:36px">                    <div class="col">                        <button type="button" class="ui-icon ui-icon-disk" style="height:20px;width:20px" onclick="fnTipoDemandaPrevisional(\''+i+"')\" >Confeccionar Demanda</button>                    </div>                </div>            </div>"}function fnTipoDemandaPrevisional(a){var e=a.split(",");$("#IdDP").val(e[0]),$("#ppBorradoresTipoDemandaPrevisional").dialog("open");var i=CKEDITOR.instances.editor1;return i&&i.destroy(!0),CKEDITOR.replace("editor1"),fnBorradorSeleccionadoPanelDemandasPrevisional(),!1}function handleCKEditorPostDemandaPrevisional(){var a=CKEDITOR.instances.editor1.getData();$.ajax({type:"POST",url:"/Judicial/GuardarBorradorDemandasPrevisional",dataType:"json",async:!1,data:{PanelDemandaId:$("#IdDP").val(),TipoBorradorId:$("#TipoBorrador").val(),HtmlBorrador:a},success:function(a){CKEDITOR.instances.editor1.setData(a),alert("Borrador guardado exitosamente.")},error:function(a){alert("Error al cargar el borrador.")}})}function fnBorradorSeleccionadoPanelDemandasPrevisional(){""!=$("#TipoBorrador").val()&&null!=$("#TipoBorrador").val()&&$.ajax({type:"POST",url:"/Judicial/GetBorradorDemandasPrevisional",dataType:"json",async:!1,data:{IdDP:$("#IdDP").val(),TipoBorrador:$("#TipoBorrador").val()},success:function(a){fnTraeHistorialBorradorDemandaPrevisional(),CKEDITOR.instances.editor1.setData(a)},error:function(a){alert("Error al cargar el borrador.")}})}function fnTraeHistorialBorradorDemandaPrevisional(){var a={IdDP:$("#IdDP").val(),TipoBorrador:$("#TipoBorrador").val()};$.ajax({type:"POST",url:"/Judicial/GetHistoriaBorradorDemandasPrevisional",dataType:"json",async:!0,data:a,success:function(a){null!==a?($("#PrimerBorrador").text(a.creacion),$("#UltimoBorrador").text(a.ultimo)):($("#PrimerBorrador").text(""),$("#UltimoBorrador").text(""))}})}function fnGuardarTraspasosPrevisional(){var a=$("#gridPorTraspasar").jqGrid("getGridParam","selarrrow");if(""==a)alert("Debe seleccionar uno o m√°s resoluciones para hacer el traspaso.");else{var e={ids:JSON.stringify(a)};$.ajax({type:"POST",url:"/Judicial/GuardarTraspasosPrevisional",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:e,success:function(a){-1!=a?($("body").removeClass("loading"),jQuery("#gridPorTraspasar").jqGrid().trigger("reloadGrid",[{page:1}]),fnCargarTraspasosPendientesPrevisional()):($("body").removeClass("loading"),alert("Error al guardar traspasos."))},error:function(a){$("body").removeClass("loading"),alert("Error al guardar traspasos."+a)}})}}function fnCargarTraspasosPendientesPrevisional(){var a="/Judicial/GetTraspasoJudicialHechoPrevisional?";a+="fechaDesde="+$("#FechaDesde").datepicker({dateFormat:"dd-mm-yyyy"}).val()+"&fechaHasta="+$("#FechaHasta").datepicker({dateFormat:"dd-mm-yyyy"}).val(),jQuery("#gridTraspasados").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}])}function fnExcelTraspasosPendientesPrevisional(){var a="/Judicial/ExcelTraspasosHechosPrevisional?fechaDesde="+$("#FechaDesde").datepicker({dateFormat:"dd-mm-yyyy"}).val()+"&fechaHasta="+$("#FechaHasta").datepicker({dateFormat:"dd-mm-yyyy"}).val();window.location.href=a}function fnCargarOrgChartPanelDemandaMasiva(){$.ajax({type:"POST",url:"/Judicial/ListarPanelDemandaControlGestionMasivas",dataType:"json",async:!1,data:{},success:function(a){var e=new google.visualization.DataTable;e.addColumn("string","Nombre"),e.addColumn("string","Padre"),e.addColumn("string","ToolTip");for(var i=0;i<a.length;i++){var r;r='<div style="color:red; font-style:italic">'+a[i].Item+"</div><div onclick=\"fnPanelDemandaMasivaReporte('"+a[i].Id+"','"+a[i].Item+'\')"style="cursor:pointer"><div style="color:blue; font-style:italic">'+a[i].Total+"</div></div>",e.addRow([{v:a[i].Id,f:r},a[i].Parent,a[i].Item])}new google.visualization.OrgChart(document.getElementById("chartPanelDemandaMasiva")).draw(e,{allowHtml:!0})},error:function(a){alert("Error al cargar el panel.")}})}function handleCKEditorPostDemandaMasiva(){var a=CKEDITOR.instances.editor1.getData();$.ajax({type:"POST",url:"/Judicial/GuardarBorradorDemandasMasivas",dataType:"json",async:!1,data:{PanelDemandaId:$("#IdDM").val(),TipoBorradorId:$("#TipoBorrador").val(),HtmlBorrador:a},success:function(a){CKEDITOR.instances.editor1.setData(a),alert("Borrador guardado exitosamente.")},error:function(a){alert("Error al cargar el borrador.")}})}function fnBorradorSeleccionadoPanelDemandasMasivas(){""!=$("#TipoBorrador").val()&&null!=$("#TipoBorrador").val()&&$.ajax({type:"POST",url:"/Judicial/GetBorradorDemandasMasivas",dataType:"json",async:!1,data:{IdDM:$("#IdDM").val(),TipoBorrador:$("#TipoBorrador").val()},success:function(a){fnTraeHistorialBorradorDemandaMasiva(),CKEDITOR.instances.editor1.setData(a)},error:function(a){alert("Error al cargar el borrador.")}})}function fnTraeHistorialBorradorDemandaMasiva(){var a={IdDM:$("#IdDM").val(),TipoBorrador:$("#TipoBorrador").val()};$.ajax({type:"POST",url:"/Judicial/GetHistoriaBorradorDemandasMasivas/",dataType:"json",async:!0,data:a,success:function(a){null!==a?($("#PrimerBorrador").text(a.creacion),$("#UltimoBorrador").text(a.ultimo)):($("#PrimerBorrador").text(""),$("#UltimoBorrador").text(""))}})}function fnBotonesGridPanelDemandasMasivas(a,e,i){return'<div class="tabla"><div class="fila" style="margin-left:8px"><div class="col"><button type="button" class="ui-icon ui-icon-document" style="height:20px;width:20px" onclick="fnEditarPanelMasivas(\''+i+"')\" >Editar</button></div></div></div>"}function fnBotonesGridConfeccionDemanda(a,e,i){return'<div class="tabla">                <div class="fila" style="margin-left:36px">                    <div class="col">                        <button type="button" class="ui-icon ui-icon-disk" style="height:20px;width:20px" onclick="fnTipoDemandaMasiva(\''+i+"')\" >Confeccionar Demanda</button>                    </div>                </div>            </div>"}function fnBotonesGridDescargarDemanda(a,e,i){return'<div class="tabla">                <div class="fila" style="margin-left:36px">                    <div class="col">                          <button disabled type="button" class="ui-icon ui-icon-arrowthickstop-1-s" style="height:20px;width:19px;cursor:not-allowed;">Descargar PDF</button>                    </div>                </div>            </div>'}function fnTipoDemandaMasiva(a){var e=a.split(",");$("#IdDM").val(e[0]),$("#ppBorradoresTipoDemandaMasiva").dialog("open");var i=CKEDITOR.instances.editor1;return i&&i.destroy(!0),CKEDITOR.replace("editor1"),fnBorradorSeleccionadoPanelDemandasMasivas(),!1}function fnDescargarPDFDemandaMasivaPopUp(a){if(""!=$("#TipoBorrador").val()){var e=a.split(",");$("#IdDM").val(e[0]),fnDescargarPDFDemandaMasiva($("#IdDM").val(),$("#TipoBorrador").val())}return!1}function fnDescargarPDFDemandaMasivaGrilla(a){var e=a.split(",");return $("#IdDM").val(e[0]),fnDescargarPDFDemandaMasiva($("#IdDM").val(),7),!1}function fnDescargarPDFDemandaMasiva(a,e){$("#loading-gif").show();var i="IdDM="+a+"&IdTipoBorrador="+e,o=new XMLHttpRequest;o.open("POST","/Judicial/ExportToPDFDemandaMasiva",!0),o.setRequestHeader("Content-type","application/x-www-form-urlencoded"),o.responseType="blob",o.onload=function(a){if(200===o.status){var e=o.getResponseHeader("content-disposition"),i=/"([^"]*)"/.exec(e),r=(null!=i&&i[1]&&i[1],new Blob([o.response],{type:"application/pdf"})),n=document.createElement("a");n.href=window.URL.createObjectURL(r),n.download="DemandaMasiva_"+new Date+".pdf",document.body.appendChild(n),n.click(),document.body.removeChild(n)}$("#loading-gif").hide()},o.send(i)}function fnEditarPanelMasivas(a){var e=a.split(","),i=$("#ppAvanceDemanda").dialog();frmAvanceDemandaReset(),$("#frmAvanceDemanda input[id=PanelProcesado]").val(e[17]),"S"==e[17]?($("#EnviaFechaEntrega").prop("disabled",!0),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!0)):($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1)),0!=e[19]&&e[19]!=$("#frmAvanceDemanda input[id=GetUsuario]").val()&&($("#EnviaFechaEntrega").prop("disabled",!0),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!0)),13!=$("#frmAvanceDemanda input[id=GetPerfil]").val()&&10!=$("#frmAvanceDemanda input[id=GetPerfil]").val()||($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("option","minDate",null),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("option","maxDate",null)),6==$("#frmAvanceDemanda input[id=GetPerfil]").val()&&($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1)),7==$("#frmAvanceDemanda input[id=GetPerfil]").val()&&($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!1));e=a.split(",");if($("#frmAvanceDemanda input[id=PanelId]").val(e[0]),$("#frmAvanceDemanda input[id=usridHidden]").val(e[19]),$("#frmAvanceDemanda input[id=rutDeudorHidden]").val(e[5]),$("#frmAvanceDemanda input[id=nombreDeudorHidden]").val(e[6]),$("#frmAvanceDemanda input[id=rutClienteHidden]").val(e[22]),$("#frmAvanceDemanda input[id=nombreClienteHidden]").val(e[4]),$("#frmAvanceDemanda input[id=pclidHidden]").val(e[20]),$("#frmAvanceDemanda input[id=ctcidHidden]").val(e[21]),$("#frmAvanceDemanda input[id=CountFechaEntrega]").val(e[23]),$("#FechaTribunal").datepicker("option","dateFormat","dd/mm/yy"),$("#FechaEntrega").datepicker("option","dateFormat","dd/mm/yy"),$("#ppAvanceDemanda").dialog("open"),0==e[23]?($("#IngresoTribunal").hide(),$("#flagTituloEnviaFechaEntrega").hide(),$("#EnviaFechaEntrega").hide(),$("#EnviaFechaEntrega").prop("checked",!0),$("#FechaEntrega").datepicker("enable")):($("#IngresoTribunal").show(),$("#flagTituloEnviaFechaEntrega").show(),$("#EnviaFechaEntrega").show(),$("#IngresoTribunal").show()),i.dialog("option","height",$("#divTabla").outerHeight()+100),""==e[11]||null==e[11])$("#FechaConfeccion").datepicker().datepicker("setDate","today");else{var r=e[11].replace(/\D+/g,""),n=("0"+(o=new Date(parseInt(r))).getDate()).slice(-2)+"/"+("0"+(o.getMonth()+1)).slice(-2)+"/"+o.getFullYear();$("#frmAvanceDemanda input[id=FechaConfeccion]").val(n)}if(e[12]){r=e[12].replace(/\D+/g,"");var o=new Date(parseInt(r)),t=new Date(o.getFullYear(),o.getMonth(),o.getDate());$("#FechaEntrega").datepicker().datepicker("setDate",t),$("#FechaEntrega").datepicker("option","minDate",t),$("#FechaEntrega").datepicker("option","maxDate",t);var d=("0"+o.getDate()).slice(-2)+"/"+("0"+(o.getMonth()+1)).slice(-2)+"/"+o.getFullYear();$("#frmAvanceDemanda input[id=FechaEntregaHidden]").val(d)}else $("#frmAvanceDemanda input[id=FechaEntrega]").val(""),$("#frmAvanceDemanda input[id=FechaEntregaHidden]").val(""),$("#FechaEntrega").datepicker("option","minDate",0),$("#FechaEntrega").datepicker("option","maxDate",0);if(""==e[13]||null==e[13])$("#frmAvanceDemanda input[id=FechaTribunal]").val("");else{r=e[13].replace(/\D+/g,"");var l=("0"+(o=new Date(parseInt(r))).getDate()).slice(-2)+"/"+("0"+(o.getMonth()+1)).slice(-2)+"/"+o.getFullYear();$("#frmAvanceDemanda input[id=FechaTribunal]").val(l)}$("#frmAvanceDemanda textarea[id=Comentarios]").val(e[16])}function fnGuardarAvanceDemandaMasiva(){var a=$("#frmAvanceDemanda input[id=usridHidden]").val(),e={panelId:$("#PanelId").val(),userIdEncargado:a,fechaEnvio:$("#FechaConfeccion").val(),flagEnviaFechaEntrega:$("#EnviaFechaEntrega").prop("checked"),fechaEntrega:$("#FechaEntrega").val(),fechaTribunales:$("#FechaTribunal").val(),comentarios:$("#Comentarios").val()};""!=a&&"0"!=a?$.ajax({type:"POST",url:"/Judicial/GuardarAvanceDemandaMasiva?",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify(e),success:function(a){0<a?(fnRefreshGridPanelDemandasMasivas(),$("#ppAvanceDemanda").dialog("close")):alert(a)},error:function(a,e,i){alert("Error al guardar Avance demanda."+i)}}):alert("Debe ingresar el encargado de la demanda")}function fnGuardarAvanceDemandaMasivaRol(){""==$("#frmAvanceDemanda input[id=ctcidHidden]").val()||""==$("#frmAvanceDemanda input[id=pclidHidden]").val()||""==$("#Rol").val()||""==$("#TribunalSelect").val()||""==$("#TipoCausa").val()||""==$("#MateriaJudicial").val()?alert("Debe ingresar todos los datos mandatorios."):$.ajax({type:"POST",url:"/Judicial/GuardarAvanceDemandaMasivaRol/",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:{TipoRol:$("#TipoRol").val(),Rol:$("#Rol").val(),Tribunal:$("#TribunalSelect").val(),TipoCausa:$("#TipoCausa").val(),MateriaJudicial:$("#MateriaJudicial").val(),Rolid:$("#Rolid").val(),Pclid:$("#frmAvanceDemanda input[id=pclidHidden]").val(),Ctcid:$("#frmAvanceDemanda input[id=ctcidHidden]").val(),ComboQuiebra:$("#ComboQuiebra").val(),panelId:$("#PanelId").val(),fechaTribunales:$("#FechaDemanda").val(),flagEnviaFechaEntrega:$("#EnviaFechaEntrega").prop("checked"),fechaEntrega:$("#frmAvanceDemanda input[id=FechaEntrega]").val(),RutDeudor:$("#frmAvanceDemanda input[id=rutDeudorHidden]").val()},success:function(a){$("body").removeClass("loading"),a.success?($("#Rolid").val(a.rolId),"0"!=$("#Rolid").val()&&""!=$("#Rolid").val()&&(alert("El Rol fue guardado con exito!"),fnGuardarAvanceDemandaMasiva(),fnRefreshGridPanelDemandasMasivas(),$("#ppAgragarRol").dialog("close"),$("#ppAvanceDemanda").dialog("close"),$("#EnviaFechaEntrega").prop("disabled",!0),$("#EnviaFechaEntrega").prop("checked",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"))):($("body").removeClass("loading"),alert("Error al guardar Rol."))}})}function fnRefreshGridPanelDemandasMasivas(){jQuery("#gridPanelDemandas").jqGrid().setGridParam({url:"/Judicial/ListarPanelDemandasMasivas/"}).trigger("reloadGrid",[{page:1}])}function fnCursoDemandaMasiva(a){var e=$('#gridPanelDemandas tr[id="'+a+'"] select[id="'+a+'_CursoDemanda"]').val();console.log(e),fnGuardarCursoDemandaMasiva(a,e)}function formatCursoDemandaMasiva(a,e,i){return tipoCursoDemandaMasiva(a,i)}function tipoCursoDemandaMasiva(a,e){e[0],e[0],e[0],e[0];var i='<select role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemandaMasiva('+e[0]+');"><option role="option" value="-1" selected="selected">--</option><option role="option" value="1">SI</option><option role="option" value="0">NO</option></select>',r='<select disabled role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemandaMasiva('+e[0]+');"><option role="option" value="-1">--</option><option role="option" value="1" selected="selected">SI</option><option role="option" value="0">NO</option></select>',n=(e[0],e[0],'<select disabled role="select" id="'+e[0]+'_CursoDemanda" name="CursoDemanda" size="1" class="editable" onchange="fnCursoDemandaMasiva('+e[0]+');"><option role="option" value="-1" selected="selected">--</option><option role="option" value="1">SI</option><option role="option" value="0">NO</option></select>');return"S"==e[17]?"SI"==a?r:i:"N"==e[17]?n:void 0}function fnGuardarCursoDemandaMasiva(a,e){var i={panelId:a,cursoDemanda:e,motivo:""};$.ajax({type:"POST",url:"/Judicial/GuardarCursoDemandaMasiva/?",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify(i),beforeSend:function(){$("body").addClass("loading")},success:function(a){$("body").removeClass("loading"),jQuery("#gridPanelDemandas").jqGrid().trigger("reloadGrid",[{page:1}])},error:function(a,e,i){$("body").removeClass("loading"),alert("Error al guardar curso de la demanda."+i)}})}function fnExcelPanelDemandasMasivas(){window.location.href="/Judicial/ExportToExcelPanelDemandasMasivas"}function fnPanelDemandaMasivaReporte(a,e){$("#TipoReportePanelDemanda").val(a),ConfiguracionColumnasReportePanelDemanda($("#TipoReportePanelDemanda").val()),$("#gridPanelDemandaReporte").jqGrid("clearGridData");$("#ppPanelDemandaReporte").dialog();$("#ppPanelDemandaReporte").dialog("option","title",e),$("#ppPanelDemandaReporte").dialog("open"),$.ajax({type:"POST",url:"/Judicial/ListarPanelDemandaMasivaReporteOrgChartItem/",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify({reporteId:a}),success:function(a){if(0<a.length)for(var e=0;e<=a.length;e++)$("#gridPanelDemandaReporte").jqGrid("addRowData",e+1,a[e])},error:function(a,e,i){alert("Error al guardar Avance demanda."+i)}})}function fnCargarTraspasos(){jQuery("#gridPorTraspasar").jqGrid().trigger("reloadGrid",[{page:1}])}function fnGuardarTraspasos(){var a=$("#gridPorTraspasar").jqGrid("getGridParam","selarrrow");if(""==a)alert("Debe seleccionar uno o mas deudores para hacer el traspaso.");else{var e={ids:JSON.stringify(a)};$.ajax({type:"POST",url:"/Judicial/GuardarTraspasos/",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:e,success:function(a){-1!=a?($("body").removeClass("loading"),jQuery("#gridPorTraspasar").jqGrid().trigger("reloadGrid",[{page:1}]),fnCargarTraspasosPendientes()):($("body").removeClass("loading"),alert("Error al guardar traspasos."))},error:function(a){$("body").removeClass("loading"),alert("Error al guardar traspasos."+a)}})}}function fnCargarTraspasosPendientes(){var a="/Judicial/GetTraspasoJudicialHecho/?";a+="fechaDesde="+$("#FechaDesde").datepicker({dateFormat:"dd-mm-yyyy"}).val()+"&fechaHasta="+$("#FechaHasta").datepicker({dateFormat:"dd-mm-yyyy"}).val(),jQuery("#gridTraspasados").jqGrid().setGridParam({url:a}).trigger("reloadGrid",[{page:1}])}function fnExcelTraspasosPendientes(){var a="/Judicial/ExcelTraspasosHechos/?fechaDesde="+$("#FechaDesde").datepicker({dateFormat:"dd-mm-yyyy"}).val()+"&fechaHasta="+$("#FechaHasta").datepicker({dateFormat:"dd-mm-yyyy"}).val();window.location.href=a}function fnRevertirTraspasos(){var a;if(""==(a=$("#gridPorRevertir").jqGrid("getGridParam","selarrrow"))||""==$("#Estado").val())alert("Debe seleccionar uno o mas documentos para hacer la reversa el traspaso y debe seleccionar un nuevo estado.");else{var e={ids:JSON.stringify(a),estid:$("#Estado").val(),comentario:$("#Comentario").val()};$.ajax({type:"POST",url:"/Judicial/GuardarReversaTraspasos/",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:e,success:function(a){-1!=a?($("body").removeClass("loading"),jQuery("#gridTraspasados").jqGrid().trigger("reloadGrid",[{page:1}]),jQuery("#gridPorRevertir").jqGrid().trigger("reloadGrid",[{page:1}])):($("body").removeClass("loading"),alert("Error al guardar traspasos."))},error:function(a){$("body").removeClass("loading"),alert("Error al guardar traspasos."+a)}})}}function MostrarDocumentosReversa(a,e){var i=a.split("|"),r="/Judicial/GetDocumentosReversaTraspasoJudicial/?";r+="pclid="+i[0]+"&ctcid="+i[1],jQuery("#gridPorRevertir").jqGrid().setGridParam({url:r}).trigger("reloadGrid",[{page:1}])}function fnBotonesGridPanelDemandas(a,e,i){return'        <div class="tabla"><div class="fila">            <div class="col"><button type="button" class="ui-icon ui-icon-document" style="height:20px;width:20px" onclick="fnEditarPanel(\''+i+"')\">Editar</button></div>        </div></div>"}function fnBotonEliminarPanelDemandas(a,e,i){return'        <div class="tabla"><div class="fila">            <div class="col"><button type="button" class="ui-icon ui-icon-trash" style="height:20px;width:20px" onclick="fnEliminarPanelDemanda(\''+i+"')\">Eliminar</button></div>        </div></div>"}function fnEditarPanel(a){var e=a.split(","),i=$("#ppAvanceDemanda").dialog();frmAvanceDemandaReset(),$("#frmAvanceDemanda input[id=PanelProcesado]").val(e[19]),"S"==e[19]?($("#EnviaFechaEntrega").prop("disabled",!0),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!0)):($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1)),0!=e[23]&&e[23]!=$("#frmAvanceDemanda input[id=GetUsuario]").val()&&($("#EnviaFechaEntrega").prop("disabled",!0),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!0)),13!=$("#frmAvanceDemanda input[id=GetPerfil]").val()&&10!=$("#frmAvanceDemanda input[id=GetPerfil]").val()||($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaConfeccion]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaConfeccion]").datepicker("option","minDate",null),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("option","minDate",null),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("option","maxDate",null)),6==$("#frmAvanceDemanda input[id=GetPerfil]").val()&&($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker("enable"),$("#btnGuardar").prop("disabled",!1)),7==$("#frmAvanceDemanda input[id=GetPerfil]").val()&&($("#EnviaFechaEntrega").prop("disabled",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker("enable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"),$("#btnGuardar").prop("disabled",!1));e=a.split(",");if($("#frmAvanceDemanda input[id=PanelId]").val(e[0]),$("#frmAvanceDemanda input[id=usridHidden]").val(e[23]),$("#frmAvanceDemanda input[id=rutDeudorHidden]").val(e[6]),$("#frmAvanceDemanda input[id=nombreDeudorHidden]").val(e[7]),$("#frmAvanceDemanda input[id=rutClienteHidden]").val(e[26]),$("#frmAvanceDemanda input[id=nombreClienteHidden]").val(e[5]),$("#frmAvanceDemanda input[id=pclidHidden]").val(e[24]),$("#frmAvanceDemanda input[id=ctcidHidden]").val(e[25]),$("#frmAvanceDemanda input[id=CountFechaEntrega]").val(e[27]),$("#ppAvanceDemanda").dialog("open"),""==e[12]||null==e[12]?($("#Confeccion").show(),$("#Correcciones").hide(),$("#IngresoTribunal").hide(),$("#buscarEncargado").show(),$("#MostrarEncargado").hide()):($("#Confeccion").show(),$("#Correcciones").show(),$("#IngresoTribunal").show(),$("#buscarEncargado").hide(),$("#MostrarEncargado").show(),$("#frmAvanceDemanda label[for=Encargado]").text(e[12])),i.dialog("option","height",$("#divTabla").outerHeight()+100),0==e[27]?($("#IngresoTribunal").hide(),$("#flagTituloEnviaFechaEntrega").hide(),$("#EnviaFechaEntrega").hide(),$("#EnviaFechaEntrega").prop("checked",!0),$("#FechaEntrega").datepicker("enable")):($("#IngresoTribunal").show(),$("#flagTituloEnviaFechaEntrega").show(),$("#EnviaFechaEntrega").show(),$("#IngresoTribunal").show()),i.dialog("option","height",$("#divTabla").outerHeight()+100),""==e[13]||null==e[13])$("#FechaConfeccion").datepicker().datepicker("setDate","today");else{var r=e[13].replace(/\D+/g,""),n=("0"+(t=new Date(parseInt(r))).getDate()).slice(-2)+"/"+("0"+(t.getMonth()+1)).slice(-2)+"/"+t.getFullYear();$("#frmAvanceDemanda input[id=FechaConfeccion]").val(n)}if(""==e[14]||null==e[14])$("#frmAvanceDemanda input[id=FechaEntrega]").val(""),$("#frmAvanceDemanda input[id=FechaEntregaHidden]").val("");else{r=e[14].replace(/\D+/g,"");var o=("0"+(t=new Date(parseInt(r))).getDate()).slice(-2)+"/"+("0"+(t.getMonth()+1)).slice(-2)+"/"+t.getFullYear();$("#frmAvanceDemanda input[id=FechaEntrega]").val(o),$("#frmAvanceDemanda input[id=FechaEntregaHidden]").val(o)}if(""==e[15]||null==e[15])$("#frmAvanceDemanda input[id=FechaTribunal]").val("");else{r=e[15].replace(/\D+/g,"");var t,d=("0"+(t=new Date(parseInt(r))).getDate()).slice(-2)+"/"+("0"+(t.getMonth()+1)).slice(-2)+"/"+t.getFullYear();$("#frmAvanceDemanda input[id=FechaTribunal]").val(d)}$("#frmAvanceDemanda textarea[id=Comentarios]").val(e[18])}function fnEliminarPanelDemanda(a){if(1==confirm("Desea eliminar esta demanda?")){var e="/Judicial/EliminarPanelDemanda?IdPanelDemanda="+a.split(",")[0];$.ajax({type:"POST",url:e,dataType:"json",async:!0,success:function(a){jQuery("#gridPanelDemandas").jqGrid().trigger("reloadGrid",[{page:1}])},error:function(a){alert("Error al eliminar la demanda."+a)}})}}function frmAvanceDemandaReset(){$("#EnviaFechaEntrega").prop("checked",!1),$("#frmAvanceDemanda input[id=PanelId]").val(""),$("#frmAvanceDemanda input[id=usridHidden]").val(""),$("#frmAvanceDemanda input[id=rutDeudorHidden]").val(""),$("#frmAvanceDemanda input[id=nombreDeudorHidden]").val(""),$("#frmAvanceDemanda input[id=rutClienteHidden]").val(""),$("#frmAvanceDemanda input[id=nombreClienteHidden]").val(""),$("#frmAvanceDemanda input[id=pclidHidden]").val(""),$("#frmAvanceDemanda input[id=ctcidHidden]").val(""),$("#frmAvanceDemanda input[id=FechaConfeccion]").val(""),$("#frmAvanceDemanda input[id=FechaEntrega]").val(""),$("#frmAvanceDemanda input[id=FechaEntregaHidden]").val(""),$("#frmAvanceDemanda input[id=FechaTribunal]").val(""),$("#frmAvanceDemanda textarea[id=Comentarios]").val(""),$("#frmAvanceDemanda input[id=NombreUsuario]").val(""),$("#frmAvanceDemanda label[for=Encargado]").text("")}function fnCambiarFechaEntrega(){$("#EnviaFechaEntrega").is(":checked")?($("#FechaEntrega").val(""),$("#FechaEntrega").datepicker("enable")):($("#FechaEntrega").val($("#FechaEntregaHidden").val()),$("#FechaEntrega").datepicker().datepicker("disable"))}function fnGuardarAvanceDemanda(){var a=""==$("#usrid").val()?$("#frmAvanceDemanda input[id=usridHidden]").val():$("#usrid").val(),e={panelId:$("#PanelId").val(),userIdEncargado:a,fechaEnvio:$("#FechaConfeccion").val(),flagEnviaFechaEntrega:$("#EnviaFechaEntrega").prop("checked"),fechaEntrega:$("#FechaEntrega").val(),fechaTribunales:$("#FechaTribunal").val(),comentarios:$("#Comentarios").val()};""!=a&&"0"!=a?$.ajax({type:"POST",url:"/Judicial/GuardarAvanceDemanda/?",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify(e),success:function(a){0<a?(fnRefreshGridPanelDemandas(),$("#ppAvanceDemanda").dialog("close")):alert(a)},error:function(a,e,i){alert("Error al guardar Avance demanda."+i)}}):alert("Debe ingresar el encargado de la demanda")}function fnRefreshGridPanelDemandas(){jQuery("#gridPanelDemandas").jqGrid().setGridParam({url:"/Judicial/ListarPanelDemandas"}).trigger("reloadGrid",[{page:1}])}function fnIngresarRol(a){if(""==$("#frmAvanceDemanda input[id=FechaEntrega]").val())alert("Debe ingresar y guardar la fecha de entrega"),$("#frmAvanceDemanda input[id=FechaTribunal]").val("");else if("N"==$("#frmAvanceDemanda input[id=PanelProcesado]").val()){$("#ppAgragarRol").dialog();$("#ppAgragarRol").dialog("open"),refrescarFrmAvanceDemandaRol(),$.ajax({type:"POST",url:"/Judicial/TraeDeudorQuiebra",dataType:"json",async:!0,data:{rutDeudor:$("#frmAvanceDemanda input[id=rutDeudorHidden]").val()},success:function(a){a.success&&($("#frmAvanceDemandaRol input[id=Rol]").val(a.rolNumero),$("#frmAvanceDemandaRol input[id=TribunalSelect]").val(a.tribunalId),$("#frmAvanceDemandaRol input[id=Tribunal]").val(a.tribunal),$("#frmAvanceDemandaRol select[id=TipoCausa]").val(a.tipoCausaId),$("#frmAvanceDemandaRol select[id=MateriaJudicial]").val(a.materiaJodicialId),$('#ComboQuiebra > option[value="S"]').attr("selected","selected"))}}),$("#frmAvanceDemandaRol input[id=FechaDemanda]").val(a),$("#frmAvanceDemandaRol input[id=NombreRutDeudor]").val($("#frmAvanceDemanda input[id=rutDeudorHidden]").val()+" - "+$("#frmAvanceDemanda input[id=nombreDeudorHidden]").val()),$("#frmAvanceDemandaRol input[id=NombreRutCliente]").val($("#frmAvanceDemanda input[id=rutClienteHidden]").val()+" - "+$("#frmAvanceDemanda input[id=nombreClienteHidden]").val())}}function fnGuardarAvanceDemandaRol(){""==$("#frmAvanceDemanda input[id=ctcidHidden]").val()||""==$("#frmAvanceDemanda input[id=pclidHidden]").val()||""==$("#Rol").val()||""==$("#TribunalSelect").val()||""==$("#TipoCausa").val()||""==$("#MateriaJudicial").val()?alert("Debe ingresar todos los datos mandatorios."):$.ajax({type:"POST",url:"/Judicial/GuardarAvanceDemandaRol/",dataType:"json",async:!0,beforeSend:function(){$("body").addClass("loading")},data:{TipoRol:$("#TipoRol").val(),Rol:$("#Rol").val(),Tribunal:$("#TribunalSelect").val(),TipoCausa:$("#TipoCausa").val(),MateriaJudicial:$("#MateriaJudicial").val(),Rolid:$("#Rolid").val(),Pclid:$("#frmAvanceDemanda input[id=pclidHidden]").val(),Ctcid:$("#frmAvanceDemanda input[id=ctcidHidden]").val(),ComboQuiebra:$("#ComboQuiebra").val(),panelId:$("#PanelId").val(),fechaTribunales:$("#FechaDemanda").val(),flagEnviaFechaEntrega:$("#EnviaFechaEntrega").prop("checked"),fechaEntrega:$("#frmAvanceDemanda input[id=FechaEntrega]").val(),RutDeudor:$("#frmAvanceDemanda input[id=rutDeudorHidden]").val()},success:function(a){$("body").removeClass("loading"),a.success?($("#Rolid").val(a.rolId),"0"!=$("#Rolid").val()&&""!=$("#Rolid").val()&&(alert("El Rol fue guardado con exito!"),fnGuardarAvanceDemandaMasiva(),fnRefreshGridPanelDemandas(),$("#ppAgragarRol").dialog("close"),$("#EnviaFechaEntrega").prop("disabled",!0),$("#EnviaFechaEntrega").prop("checked",!1),$("#frmAvanceDemanda input[id=FechaEntrega]").datepicker().datepicker("disable"),$("#frmAvanceDemanda input[id=FechaTribunal]").datepicker().datepicker("disable"))):($("body").removeClass("loading"),alert("Error al guardar Rol."))}})}function fnCargarOrgChartPanelDemanda(){$.ajax({type:"POST",url:"/Judicial/ListarPanelDemandaControlGestion",dataType:"json",async:!1,data:{},success:function(a){var e=new google.visualization.DataTable;e.addColumn("string","Nombre"),e.addColumn("string","Padre"),e.addColumn("string","ToolTip");for(var i=0;i<a.length;i++){var r;r='<div style="color:red; font-style:italic">'+a[i].Item+"</div><div onclick=\"fnPanelDemandaReporte('"+a[i].Id+"','"+a[i].Item+'\')"style="cursor:pointer"><div style="color:blue; font-style:italic">'+a[i].Total+"</div></div>",e.addRow([{v:a[i].Id,f:r},a[i].Parent,a[i].Item])}new google.visualization.OrgChart(document.getElementById("chartPanelDemanda")).draw(e,{allowHtml:!0})},error:function(a){alert("Error al cargar el panel.")}})}function ConfiguracionColumnasReportePanelDemanda(a){var e=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","FechaIngresoTribunal"),$("#gridPanelDemandaReporte").setGridWidth(e);var i=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","FechaEntrega"),$("#gridPanelDemandaReporte").setGridWidth(i);var r=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","Encargado"),$("#gridPanelDemandaReporte").setGridWidth(r);var n=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","DiasTranscurso"),$("#gridPanelDemandaReporte").setGridWidth(n);var o=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","CountCorrecciones"),$("#gridPanelDemandaReporte").setGridWidth(o);var t=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","FechaEnvio"),$("#gridPanelDemandaReporte").setGridWidth(t);var d=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","Correcciones"),$("#gridPanelDemandaReporte").setGridWidth(d);var l=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","FechaAsignacion"),$("#gridPanelDemandaReporte").setGridWidth(l);var s=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","FechaAprobacionTraspaso"),$("#gridPanelDemandaReporte").setGridWidth(s);var c=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("showCol","IngresoJudicial"),$("#gridPanelDemandaReporte").setGridWidth(c);var u=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");$("#gridPanelDemandaReporte").jqGrid("hideCol","DiasTranscurso2"),$("#gridPanelDemandaReporte").setGridWidth(u);var p=$("#gridPanelDemandaReporte").jqGrid("getGridParam","width");switch($("#gridPanelDemandaReporte").jqGrid("hideCol","TrackingDemanda"),$("#gridPanelDemandaReporte").setGridWidth(p),a){case"1":case"2":case"3":$("#gridPanelDemandaReporte").jqGrid("hideCol","Encargado"),$("#gridPanelDemandaReporte").setGridWidth(r),$("#gridPanelDemandaReporte").jqGrid("hideCol","DiasTranscurso"),$("#gridPanelDemandaReporte").setGridWidth(n),$("#gridPanelDemandaReporte").jqGrid("hideCol","CountCorrecciones"),$("#gridPanelDemandaReporte").setGridWidth(o);break;case"4":$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaEnvio"),$("#gridPanelDemandaReporte").setGridWidth(t),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaIngresoTribunal"),$("#gridPanelDemandaReporte").setGridWidth(e),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaEntrega"),$("#gridPanelDemandaReporte").setGridWidth(i),$("#gridPanelDemandaReporte").jqGrid("hideCol","Encargado"),$("#gridPanelDemandaReporte").setGridWidth(r),$("#gridPanelDemandaReporte").jqGrid("hideCol","Correcciones"),$("#gridPanelDemandaReporte").setGridWidth(d),$("#gridPanelDemandaReporte").jqGrid("hideCol","CountCorrecciones"),$("#gridPanelDemandaReporte").setGridWidth(o);break;case"5":$("#gridPanelDemandaReporte").jqGrid("hideCol","IngresoJudicial"),$("#gridPanelDemandaReporte").setGridWidth(c),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaIngresoTribunal"),$("#gridPanelDemandaReporte").setGridWidth(e),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaEntrega"),$("#gridPanelDemandaReporte").setGridWidth(i),$("#gridPanelDemandaReporte").jqGrid("hideCol","Correcciones"),$("#gridPanelDemandaReporte").setGridWidth(d),$("#gridPanelDemandaReporte").jqGrid("hideCol","DiasTranscurso"),$("#gridPanelDemandaReporte").setGridWidth(n),$("#gridPanelDemandaReporte").jqGrid("hideCol","CountCorrecciones"),$("#gridPanelDemandaReporte").setGridWidth(o);break;case"6":$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAsignacion"),$("#gridPanelDemandaReporte").setGridWidth(l),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAprobacionTraspaso"),$("#gridPanelDemandaReporte").setGridWidth(s),$("#gridPanelDemandaReporte").jqGrid("hideCol","IngresoJudicial"),$("#gridPanelDemandaReporte").setGridWidth(c),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaIngresoTribunal"),$("#gridPanelDemandaReporte").setGridWidth(e),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaEntrega"),$("#gridPanelDemandaReporte").setGridWidth(i),$("#gridPanelDemandaReporte").jqGrid("hideCol","CountCorrecciones"),$("#gridPanelDemandaReporte").setGridWidth(o);break;case"7":$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAsignacion"),$("#gridPanelDemandaReporte").setGridWidth(l),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAprobacionTraspaso"),$("#gridPanelDemandaReporte").setGridWidth(s),$("#gridPanelDemandaReporte").jqGrid("hideCol","IngresoJudicial"),$("#gridPanelDemandaReporte").setGridWidth(c),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaIngresoTribunal"),$("#gridPanelDemandaReporte").setGridWidth(e),$("#gridPanelDemandaReporte").jqGrid("hideCol","Encargado"),$("#gridPanelDemandaReporte").setGridWidth(r),$("#gridPanelDemandaReporte").jqGrid("hideCol","DiasTranscurso"),$("#gridPanelDemandaReporte").setGridWidth(n);break;case"8":$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAsignacion"),$("#gridPanelDemandaReporte").setGridWidth(l),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAprobacionTraspaso"),$("#gridPanelDemandaReporte").setGridWidth(s),$("#gridPanelDemandaReporte").jqGrid("hideCol","Encargado"),$("#gridPanelDemandaReporte").setGridWidth(r),$("#gridPanelDemandaReporte").jqGrid("hideCol","Correcciones"),$("#gridPanelDemandaReporte").setGridWidth(d),$("#gridPanelDemandaReporte").jqGrid("showCol","DiasTranscurso2"),$("#gridPanelDemandaReporte").setGridWidth(u),$("#gridPanelDemandaReporte").jqGrid("hideCol","CountCorrecciones"),$("#gridPanelDemandaReporte").setGridWidth(o),$("#gridPanelDemandaReporte").jqGrid("showCol","TrackingDemanda"),$("#gridPanelDemandaReporte").setGridWidth(p);break;case"9":$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAsignacion"),$("#gridPanelDemandaReporte").setGridWidth(l),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaAprobacionTraspaso"),$("#gridPanelDemandaReporte").setGridWidth(s),$("#gridPanelDemandaReporte").jqGrid("hideCol","IngresoJudicial"),$("#gridPanelDemandaReporte").setGridWidth(c),$("#gridPanelDemandaReporte").jqGrid("hideCol","FechaIngresoTribunal"),$("#gridPanelDemandaReporte").setGridWidth(e),$("#gridPanelDemandaReporte").jqGrid("hideCol","Encargado"),$("#gridPanelDemandaReporte").setGridWidth(r),$("#gridPanelDemandaReporte").jqGrid("hideCol","Correcciones"),$("#gridPanelDemandaReporte").setGridWidth(d),$("#gridPanelDemandaReporte").jqGrid("hideCol","CountCorrecciones"),$("#gridPanelDemandaReporte").setGridWidth(o)}}function fnPanelDemandaReporte(a,e){$("#TipoReportePanelDemanda").val(a),ConfiguracionColumnasReportePanelDemanda($("#TipoReportePanelDemanda").val()),$("#gridPanelDemandaReporte").jqGrid("clearGridData");$("#ppPanelDemandaReporte").dialog();$("#ppPanelDemandaReporte").dialog("option","title",e),$("#ppPanelDemandaReporte").dialog("open"),$.ajax({type:"POST",url:"/Judicial/ListarPanelDemandaReporteOrgChartItem/",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify({reporteId:a}),success:function(a){if(0<a.length)for(var e=0;e<=a.length;e++)$("#gridPanelDemandaReporte").jqGrid("addRowData",e+1,a[e])},error:function(a,e,i){alert("Error al guardar Avance demanda."+i)}})}function fnPanelDemandaMasivaReporte(a,e){$("#TipoReportePanelDemanda").val(a),ConfiguracionColumnasReportePanelDemanda($("#TipoReportePanelDemanda").val()),$("#gridPanelDemandaReporte").jqGrid("clearGridData");$("#ppPanelDemandaReporte").dialog();$("#ppPanelDemandaReporte").dialog("option","title",e),$("#ppPanelDemandaReporte").dialog("open"),$.ajax({type:"POST",url:"/Judicial/ListarPanelDemandaMasivaReporteOrgChartItem/",dataType:"json",contentType:"application/json; charset=utf-8",async:!0,data:JSON.stringify({reporteId:a}),success:function(a){if(0<a.length)for(var e=0;e<=a.length;e++)$("#gridPanelDemandaReporte").jqGrid("addRowData",e+1,a[e])},error:function(a,e,i){alert("Error al guardar Avance demanda."+i)}})}function fnPanelQuiebraLoaded(){$("#gridPanelQuiebra>tbody>.jqgroup").each(function(a,e){var i=$("#gridPanelQuiebra>tbody>tr:eq("+(e.rowIndex+1)+")")[0].childNodes,r=$("#gridPanelQuiebra>tbody>tr:eq("+(e.rowIndex+1)+")")[0].childNodes[i.length-1].innerText,n=e.getElementsByTagName("b")[0].innerText.split("-");e.getElementsByTagName("b")[0].innerText=n[0].trim()+"-"+n[0].trim()+" - "+r+" - "+n[2].trim()})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
